<?xml version="1.0" encoding="UTF-8"?>

<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2">
 <office:scripts/>
 <office:font-face-decls>
  <style:font-face style:name="Helvetica LT Std Light" svg:font-family="&apos;Helvetica LT Std Light&apos;, &apos;HelveticaLT Std Light&apos;, Arial, Helvetica" style:font-adornments="Tavallinen"/>
  <style:font-face style:name="OpenSymbol" svg:font-family="OpenSymbol"/>
  <style:font-face style:name="Tahoma1" svg:font-family="Tahoma"/>
  <style:font-face style:name="Ubuntu" svg:font-family="Ubuntu" style:font-family-generic="swiss"/>
  <style:font-face style:name="Monospace" svg:font-family="Monospace" style:font-pitch="fixed"/>
  <style:font-face style:name="Courier New1" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-adornments="Normal" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Courier New2" svg:font-family="&apos;Courier New&apos;" style:font-adornments="Tavallinen" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="DejaVu Sans Mono" svg:font-family="&apos;DejaVu Sans Mono&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Calibri" svg:font-family="Calibri" style:font-pitch="variable"/>
  <style:font-face style:name="Helvetica Rounded LT Std1" svg:font-family="&apos;Helvetica Rounded LT Std&apos;" style:font-adornments="Lihavointi" style:font-pitch="variable"/>
  <style:font-face style:name="Helvetica Rounded LT Std" svg:font-family="&apos;Helvetica Rounded LT Std&apos;, &apos;HelveticaRounded LT Std&apos;, Arial, Helvetica" style:font-adornments="Lihavointi" style:font-pitch="variable"/>
  <style:font-face style:name="ヒラギノ角ゴ Pro W3" svg:font-family="&apos;ヒラギノ角ゴ Pro W3&apos;" style:font-pitch="variable"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Helvetica" svg:font-family="Helvetica" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Helvetica LT Std Light1" svg:font-family="&apos;Helvetica LT Std Light&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Times New Roman1" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Ubuntu1" svg:font-family="Ubuntu" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Arial Unicode MS" svg:font-family="&apos;Arial Unicode MS&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="MS Mincho" svg:font-family="&apos;MS Mincho&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Tahoma" svg:font-family="Tahoma" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:automatic-styles>
  <style:style style:name="P1" style:family="paragraph" style:parent-style-name="Header_20__26__20_Footer">
   <style:paragraph-properties fo:text-align="end" style:justify-single-word="false"/>
  </style:style>
  <style:style style:name="P2" style:family="paragraph" style:parent-style-name="Header_20__26__20_Footer">
   <style:paragraph-properties fo:text-align="start" style:justify-single-word="false"/>
  </style:style>
  <style:style style:name="P3" style:family="paragraph" style:parent-style-name="Header_20__26__20_Footer">
   <style:paragraph-properties fo:margin-top="0.635cm" fo:margin-bottom="0cm" fo:text-align="end" style:justify-single-word="false"/>
   <style:text-properties fo:color="#000000" style:font-name="Times New Roman" fo:font-size="10pt" fo:language="zxx" fo:country="none" style:font-name-asian="Times New Roman" style:font-size-asian="10pt" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/>
  </style:style>
  <style:style style:name="P4" style:family="paragraph" style:parent-style-name="INTRO">
   <style:paragraph-properties fo:break-before="page"/>
  </style:style>
  <style:style style:name="P5" style:family="paragraph" style:parent-style-name="Textformatvorlage">
   <style:paragraph-properties>
    <style:tab-stops>
     <style:tab-stop style:position="1.251cm"/>
     <style:tab-stop style:position="2.499cm"/>
     <style:tab-stop style:position="3.75cm"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="P6" style:family="paragraph" style:parent-style-name="Textformatvorlage">
   <style:paragraph-properties fo:text-align="end" style:justify-single-word="false">
    <style:tab-stops>
     <style:tab-stop style:position="1.251cm"/>
     <style:tab-stop style:position="2.499cm"/>
     <style:tab-stop style:position="3.75cm"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="P7" style:family="paragraph" style:parent-style-name="Textformatvorlage">
   <style:paragraph-properties fo:text-align="end" style:justify-single-word="false">
    <style:tab-stops>
     <style:tab-stop style:position="1.251cm"/>
     <style:tab-stop style:position="2.499cm"/>
     <style:tab-stop style:position="3.75cm"/>
    </style:tab-stops>
   </style:paragraph-properties>
   <style:text-properties fo:color="#000000" style:font-name="Times New Roman" fo:font-size="10pt" fo:language="zxx" fo:country="none" style:font-name-asian="Times New Roman" style:font-size-asian="10pt" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/>
  </style:style>
  <style:style style:name="P8" style:family="paragraph" style:parent-style-name="Caption">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="P9" style:family="paragraph" style:parent-style-name="Source_20_File_20_Middle">
   <style:text-properties fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="P10" style:family="paragraph" style:parent-style-name="Source_20_File_20_Middle">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P11" style:family="paragraph" style:parent-style-name="Source_20_File_20_Middle">
   <style:text-properties fo:color="#008080" fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="P12" style:family="paragraph" style:parent-style-name="Source_20_File_20_Middle">
   <style:text-properties fo:color="#646464"/>
  </style:style>
  <style:style style:name="P13" style:family="paragraph" style:parent-style-name="Command_20_Line_20_Start">
   <style:paragraph-properties fo:margin-left="3.747cm" fo:margin-right="0cm" fo:text-indent="0cm" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P14" style:family="paragraph" style:parent-style-name="Command_20_Line_20_End">
   <style:paragraph-properties fo:margin-left="3.747cm" fo:margin-right="0cm" fo:text-indent="0cm" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P15" style:family="paragraph" style:parent-style-name="Source_20_File_20_Start">
   <style:text-properties fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="P16" style:family="paragraph" style:parent-style-name="Source_20_File_20_Start">
   <style:text-properties fo:color="#646464"/>
  </style:style>
  <style:style style:name="P17" style:family="paragraph" style:parent-style-name="Source_20_File_20_Start">
   <style:text-properties fo:color="#646464" style:font-name="Courier New1" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="P18" style:family="paragraph" style:parent-style-name="Source_20_File_20_Start">
   <style:text-properties fo:color="#646464" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="P19" style:family="paragraph" style:parent-style-name="Illustration">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="P20" style:family="paragraph" style:parent-style-name="Illustration">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P21" style:family="paragraph" style:parent-style-name="Dictionary_20_Term">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="P22" style:family="paragraph" style:parent-style-name="Text_20_body">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P23" style:family="paragraph" style:parent-style-name="Introducing_20_list">
   <style:text-properties fo:color="#008080"/>
  </style:style>
  <style:style style:name="P24" style:family="paragraph" style:parent-style-name="Introducing_20_list">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P25" style:family="paragraph" style:parent-style-name="Source_20_File_20_End">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P26" style:family="paragraph" style:parent-style-name="Source_20_File_20_End">
   <style:text-properties fo:color="#000000" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="P27" style:family="paragraph" style:parent-style-name="Source_20_File_20_End">
   <style:text-properties fo:color="#0000c0"/>
  </style:style>
  <style:style style:name="P28" style:family="paragraph" style:parent-style-name="Contents_20_1">
   <style:paragraph-properties>
    <style:tab-stops>
     <style:tab-stop style:position="15.002cm" style:type="right" style:leader-style="dotted" style:leader-text="."/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="P29" style:family="paragraph" style:parent-style-name="Contents_20_2">
   <style:paragraph-properties>
    <style:tab-stops>
     <style:tab-stop style:position="15.002cm" style:type="right" style:leader-style="dotted" style:leader-text="."/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="P30" style:family="paragraph" style:parent-style-name="Contents_20_3">
   <style:paragraph-properties>
    <style:tab-stops>
     <style:tab-stop style:position="15.002cm" style:type="right" style:leader-style="dotted" style:leader-text="."/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="P31" style:family="paragraph" style:parent-style-name="Heading_20_4">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P32" style:family="paragraph" style:parent-style-name="Heading_20_2">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="P33" style:family="paragraph" style:parent-style-name="Heading_20_2">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P34" style:family="paragraph" style:parent-style-name="Heading_20_1" style:master-page-name="Standard">
   <style:paragraph-properties style:page-number="1"/>
  </style:style>
  <style:style style:name="P35" style:family="paragraph" style:parent-style-name="Text_20_body" style:master-page-name="First_20_Page">
   <style:paragraph-properties style:page-number="auto"/>
  </style:style>
  <style:style style:name="P36" style:family="paragraph" style:parent-style-name="Text_20_body" style:master-page-name="Table_20_of_20_Contents">
   <style:paragraph-properties style:page-number="1"/>
  </style:style>
  <style:style style:name="P37" style:family="paragraph" style:parent-style-name="Heading_20_3">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="P38" style:family="paragraph">
   <style:paragraph-properties fo:margin-left="0cm" fo:margin-right="0cm" fo:margin-top="0cm" fo:margin-bottom="0cm" fo:line-height="100%" fo:text-align="start" fo:text-indent="0cm" style:text-autospace="ideograph-alpha" style:punctuation-wrap="hanging" style:line-break="strict" style:writing-mode="lr-tb">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties fo:hyphenate="false"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties text:display="none"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties fo:font-style="italic" fo:font-weight="normal" style:font-style-asian="italic" style:font-weight-asian="normal" style:font-style-complex="italic" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties fo:color="#7f0055" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties fo:color="#7f0055" style:font-name="Monospace" fo:font-size="10pt" fo:font-weight="bold" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-weight-asian="bold" style:font-name-complex="Monospace" style:font-size-complex="10pt" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties fo:color="#000000"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:color="#000000" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties fo:color="#000000" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties fo:color="#000000" style:text-underline-style="none"/>
  </style:style>
  <style:style style:name="T12" style:family="text">
   <style:text-properties fo:color="#000000" style:text-underline-style="none" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/>
  </style:style>
  <style:style style:name="T13" style:family="text">
   <style:text-properties fo:color="#646464"/>
  </style:style>
  <style:style style:name="T14" style:family="text">
   <style:text-properties fo:color="#0000c0"/>
  </style:style>
  <style:style style:name="T15" style:family="text">
   <style:text-properties fo:color="#0000c0" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T16" style:family="text">
   <style:text-properties fo:color="#0000c0" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T17" style:family="text">
   <style:text-properties fo:color="#0000c0" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T18" style:family="text">
   <style:text-properties fo:color="#2a00ff"/>
  </style:style>
  <style:style style:name="T19" style:family="text">
   <style:text-properties fo:color="#2a00ff" fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T20" style:family="text">
   <style:text-properties fo:color="#2a00ff" fo:font-size="9pt" fo:font-style="italic" style:font-size-asian="9pt" style:font-style-asian="italic" style:font-size-complex="9pt" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="T21" style:family="text">
   <style:text-properties fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T22" style:family="text">
   <style:text-properties style:font-weight-asian="normal" style:font-weight-complex="normal"/>
  </style:style>
  <style:style style:name="T23" style:family="text">
   <style:text-properties fo:font-style="normal" style:font-style-asian="normal" style:font-style-complex="normal"/>
  </style:style>
  <style:style style:name="T24" style:family="text">
   <style:text-properties fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T25" style:family="text">
   <style:text-properties style:text-underline-style="none"/>
  </style:style>
  <style:style style:name="T26" style:family="text">
   <style:text-properties fo:color="#3f7f5f"/>
  </style:style>
  <style:style style:name="T27" style:family="text">
   <style:text-properties fo:color="#008080"/>
  </style:style>
  <style:style style:name="T28" style:family="text">
   <style:text-properties fo:color="#008080" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T29" style:family="text">
   <style:text-properties fo:color="#008080" fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="T30" style:family="text">
   <style:text-properties fo:color="#3f7f7f"/>
  </style:style>
  <style:style style:name="T31" style:family="text">
   <style:text-properties fo:color="#3f7f7f" style:font-name="Monospace" fo:font-size="10pt" style:font-name-asian="Monospace" style:font-size-asian="10pt" style:font-name-complex="Monospace" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="T32" style:family="text">
   <style:text-properties fo:color="#3f7f7f" fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="T33" style:family="text">
   <style:text-properties fo:color="#7f007f"/>
  </style:style>
  <style:style style:name="T34" style:family="text">
   <style:text-properties fo:color="#7f007f" fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="T35" style:family="text">
   <style:text-properties fo:color="#181615"/>
  </style:style>
  <style:style style:name="T36" style:family="text">
   <style:text-properties fo:color="#181615" fo:font-size="9pt" style:font-size-asian="9pt" style:font-size-complex="9pt"/>
  </style:style>
  <style:style style:name="T37" style:family="text">
   <style:text-properties style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-position="0% 100%" style:font-name="Ubuntu" fo:font-size="10pt" fo:letter-spacing="normal" fo:language="en" fo:country="US" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:letter-kerning="false" style:font-name-asian="Arial Unicode MS" style:font-size-asian="12pt" style:language-asian="zxx" style:country-asian="none" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Tahoma" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:text-scale="100%" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="fr1" style:family="graphic" style:parent-style-name="Frame">
   <style:graphic-properties fo:margin-left="0.319cm" fo:margin-right="0.319cm" style:run-through="foreground" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="page" style:horizontal-pos="from-left" style:horizontal-rel="page" fo:background-color="#ffffff" style:background-transparency="100%" fo:padding="0.026cm" fo:border="none">
    <style:background-image/>
   </style:graphic-properties>
  </style:style>
  <style:style style:name="fr2" style:family="graphic" style:parent-style-name="Frame">
   <style:graphic-properties fo:margin-left="0.319cm" fo:margin-right="0.319cm" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="page" style:horizontal-pos="from-left" style:horizontal-rel="page" fo:background-color="#ffffff" style:background-transparency="100%" fo:padding="0.026cm" fo:border="none">
    <style:background-image/>
   </style:graphic-properties>
  </style:style>
  <style:style style:name="fr3" style:family="graphic" style:parent-style-name="Graphics">
   <style:graphic-properties fo:margin-left="0.319cm" fo:margin-right="0.319cm" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" fo:padding="0.026cm" fo:border="none" style:mirror="none" fo:clip="rect(0cm, 0cm, 0cm, 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
  </style:style>
  <style:style style:name="fr4" style:family="graphic" style:parent-style-name="Graphics">
   <style:graphic-properties style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0cm, 0cm, 0cm, 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
  </style:style>
  <style:style style:name="fr5" style:family="graphic" style:parent-style-name="Graphics">
   <style:graphic-properties style:vertical-pos="top" style:vertical-rel="baseline" style:horizontal-pos="center" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0cm, 0cm, 0cm, 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
  </style:style>
  <style:style style:name="fr6" style:family="graphic" style:parent-style-name="Graphics">
   <style:graphic-properties fo:margin-left="0.3cm" fo:margin-right="0cm" style:run-through="foreground" style:wrap="dynamic" style:number-wrapped-paragraphs="no-limit" style:wrap-contour="false" style:vertical-pos="top" style:vertical-rel="paragraph" style:horizontal-pos="right" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0cm, 0cm, 0cm, 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
  </style:style>
  <style:style style:name="fr7" style:family="graphic" style:parent-style-name="Graphics">
   <style:graphic-properties fo:margin-left="0cm" fo:margin-right="0cm" style:vertical-pos="top" style:vertical-rel="baseline" fo:padding-left="0.28cm" fo:padding-right="0.28cm" fo:padding-top="0.153cm" fo:padding-bottom="0.153cm" fo:border="none" style:mirror="none" fo:clip="rect(0cm, 0cm, 0cm, 0cm)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/>
  </style:style>
  <style:style style:name="Sect1" style:family="section">
   <style:section-properties style:editable="false">
    <style:columns fo:column-count="1" fo:column-gap="0cm"/>
   </style:section-properties>
  </style:style>
  <number:number-style style:name="N0">
   <number:number number:min-integer-digits="1"/>
  </number:number-style>
  <number:date-style style:name="N84">
   <number:year number:style="long"/>
   <number:text>-</number:text>
   <number:month number:style="long"/>
   <number:text>-</number:text>
   <number:day number:style="long"/>
  </number:date-style>
  <number:date-style style:name="N108">
   <number:year number:style="long"/>
  </number:date-style>
 </office:automatic-styles>
 <office:body>
  <office:text text:use-soft-page-breaks="true">
   <office:forms form:automatic-focus="false" form:apply-design-mode="false"/>
   <text:sequence-decls>
    <text:sequence-decl text:display-outline-level="0" text:name="Illustration"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Table"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Text"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Drawing"/>
   </text:sequence-decls><draw:frame draw:style-name="fr1" draw:name="Frame2" text:anchor-type="page" text:anchor-page-number="1" svg:x="2.716cm" svg:y="6.687cm" svg:width="11.887cm" svg:height="5.962cm" draw:z-index="0">
    <draw:text-box>
     <text:p text:style-name="Title">Bound to Persist<text:line-break/>with <text:subject>Vaadin JPAContainer</text:subject></text:p>
    </draw:text-box>
   </draw:frame><draw:frame draw:style-name="fr2" draw:name="Frame3" text:anchor-type="page" text:anchor-page-number="1" svg:x="10.179cm" svg:y="11.97cm" svg:width="4.445cm" svg:height="3.704cm" draw:z-index="1">
    <draw:text-box>
     <text:p text:style-name="Subtitle"><text:subject>Vaadin JPAContainer</text:subject><text:line-break/><text:user-defined style:data-style-name="N0" text:name="Version (minor)">2.0</text:user-defined></text:p>
     <text:p text:style-name="P6"/>
     <text:p text:style-name="P5"/>
     <text:p text:style-name="P7"/>
    </draw:text-box>
   </draw:frame>
   <text:p text:style-name="P35"/>
   <text:p text:style-name="P4"><text:subject>Vaadin JPAContainer</text:subject> is a Vaadin Container implementation for binding Vaadin user interface components directly to Java objects persisted using the Java Persistence API</text:p>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter"/>
   <text:p text:style-name="Front_20_Matter">Publication date of this manual version is <text:date style:data-style-name="N84" text:date-value="2012-01-17T15:21:05.99">2012-01-10</text:date>.</text:p>
   <text:p text:style-name="Front_20_Matter">Published by:<text:line-break/>Vaadin Ltd<text:line-break/>Ruukinkatu 2-4<text:line-break/>20540 Turku<text:line-break/>Finland</text:p>
   <text:p text:style-name="Front_20_Matter">Copyright <text:date style:data-style-name="N108" text:date-value="2012-01-17T15:21:05.99">2012</text:date> Vaadin Ltd</text:p>
   <text:p text:style-name="Front_20_Matter">All Rights Reserved</text:p>
   <text:p text:style-name="Front_20_Matter">Modification, copying and other reproduction of this book in print or in digital format, unmodified or modified, is prohibited, unless a permission is explicitly granted in the specific conditions of the license agreement of <text:subject>Vaadin JPAContainer</text:subject> or in written form by the copyright owner.</text:p>
   <text:p text:style-name="Front_20_Matter">This book is part of the <text:subject>Vaadin JPAContainer</text:subject> product, which is a commercial product licensed under two alternative licenses: Commercial Vaadin Add-on License (CVAL) version 2.0 and Affero General Public License (AGPL) version 3.0. The licenses of the Vaadin Framework or other Vaadin products do not apply to <text:subject>Vaadin JPAContainer</text:subject>.</text:p>
   <text:p text:style-name="Front_20_Matter">The exact license text and other licensing information can be found from the installation package of <text:subject>Vaadin JPAContainer</text:subject> and from the web site <text:a xlink:type="simple" xlink:href="https://vaadin.com/directory#addon/vaadin-jpacontainer">https://vaadin.com/directory#addon/vaadin-jpacontainer</text:a>, where it is also possible to purchase licenses.</text:p>
   <text:p text:style-name="P36"/>
   <text:table-of-content text:style-name="Sect1" text:protected="true" text:name="Sisällysluettelo1">
    <text:table-of-content-source text:outline-level="3">
     <text:index-title-template text:style-name="Contents_20_Heading">Table of Contents</text:index-title-template>
     <text:table-of-content-entry-template text:outline-level="1" text:style-name="Contents_20_1">
      <text:index-entry-chapter/>
      <text:index-entry-span> </text:index-entry-span>
      <text:index-entry-link-start text:style-name="Internet_20_link"/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="2" text:style-name="Contents_20_2">
      <text:index-entry-chapter/>
      <text:index-entry-link-start text:style-name="Internet_20_link"/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="3" text:style-name="Contents_20_3">
      <text:index-entry-chapter/>
      <text:index-entry-link-start text:style-name="Internet_20_link"/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="4" text:style-name="Contents_20_4">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="5" text:style-name="Contents_20_5">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="6" text:style-name="Contents_20_6">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="7" text:style-name="Contents_20_7">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="8" text:style-name="Contents_20_8">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="9" text:style-name="Contents_20_9">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
     <text:table-of-content-entry-template text:outline-level="10" text:style-name="Contents_20_10">
      <text:index-entry-chapter/>
      <text:index-entry-text/>
      <text:index-entry-tab-stop style:type="right" style:leader-char="."/>
      <text:index-entry-page-number/>
     </text:table-of-content-entry-template>
    </text:table-of-content-source>
    <text:index-body>
     <text:index-title text:style-name="Sect1" text:name="Sisällysluettelo1_Head">
      <text:p text:style-name="Contents_20_Heading">Table of Contents</text:p>
     </text:index-title>
     <text:p text:style-name="P28">1. Introduction<text:tab/>1</text:p>
     <text:p text:style-name="P29">1.1. Overview<text:tab/>1</text:p>
     <text:p text:style-name="P29">1.2. Technologies Covered in the Tutorial<text:tab/>2</text:p>
     <text:p text:style-name="P29">1.3. Vaadin Data Model<text:tab/>2</text:p>
     <text:p text:style-name="P30">1.3.1. Properties<text:tab/>3</text:p>
     <text:p text:style-name="P30">1.3.2. Items<text:tab/>3</text:p>
     <text:p text:style-name="P30">1.3.3. Containers<text:tab/>3</text:p>
     <text:p text:style-name="P30">1.3.4. Normal (Non-Persistent) Binding to JavaBeans<text:tab/>3</text:p>
     <text:p text:style-name="P29">1.4. Java Persistence API<text:tab/>4</text:p>
     <text:p text:style-name="P30">1.4.1. Persistence Metadata<text:tab/>5</text:p>
     <text:p text:style-name="P30">1.4.2. JPA Implementations<text:tab/>5</text:p>
     <text:p text:style-name="P29">1.5. Rapid Start with Spring Roo<text:tab/>5</text:p>
     <text:p text:style-name="P28">2. Installing Vaadin JPAContainer<text:tab/>6</text:p>
     <text:p text:style-name="P29">2.1. Installation Options<text:tab/>6</text:p>
     <text:p text:style-name="P29">2.2. Downloading JPAContainer from Vaadin Directory<text:tab/>6</text:p>
     <text:p text:style-name="P29">2.3. Installation Package Content<text:tab/>7</text:p>
     <text:p text:style-name="P29">2.4. Including Libraries in Your Project<text:tab/>8</text:p>
     <text:p text:style-name="P29">2.5. Defining Dependencies in Maven<text:tab/>10</text:p>
     <text:p text:style-name="P29">2.6. Vaadin JPAContainer Maven Archetype<text:tab/>10</text:p>
     <text:p text:style-name="P28">3. JPAContainer AddressBook Demo<text:tab/>11</text:p>
     <text:p text:style-name="P29">3.1. Importing the Tutorial Project<text:tab/>11</text:p>
     <text:p text:style-name="P30">3.1.1. Checking Out from Repository (optional)<text:tab/>11</text:p>
     <text:p text:style-name="P30">3.1.2. Importing from Existing Installation Folder<text:tab/>11</text:p>
     <text:p text:style-name="P30">3.1.3. Import from Repository Using Subclipse<text:tab/>12</text:p>
     <text:p text:style-name="P29">3.2. Browsing the Application<text:tab/>12</text:p>
     <text:p text:style-name="P29">3.3. Persistence Configuration<text:tab/>13</text:p>
     <text:p text:style-name="P30">3.3.1. Persistence XML Schema<text:tab/>13</text:p>
     <text:p text:style-name="P30">3.3.2. Defining the Persistence Unit<text:tab/>14</text:p>
     <text:p text:style-name="P30">3.3.3. Database Connection<text:tab/>14</text:p>
     <text:p text:style-name="P30">3.3.4. Logging Configuation<text:tab/>15</text:p>
     <text:p text:style-name="P30">3.3.5. Other Settings<text:tab/>15</text:p>
     <text:p text:style-name="P29">3.4. Running the Application<text:tab/>15</text:p>
     <text:p text:style-name="P29">3.5. Browsing the Sources Online<text:tab/>16</text:p>
     <text:p text:style-name="P28">4. Defining a Domain Model<text:tab/>17</text:p>
     <text:p text:style-name="P29">4.1. A Domain Model<text:tab/>17</text:p>
     <text:p text:style-name="P29">4.2. Defining the Classes<text:tab/>17</text:p>
     <text:p text:style-name="P29">4.3. Annotating the Classes for Persistence<text:tab/>19</text:p>
     <text:p text:style-name="P30">4.3.1. @Entity<text:tab/>19</text:p>
     <text:p text:style-name="P30"><text:soft-page-break/>4.3.2. @Id<text:tab/>19</text:p>
     <text:p text:style-name="P30">4.3.3. @OneToMany<text:tab/>19</text:p>
     <text:p text:style-name="P30">4.3.4. @ManyToOne<text:tab/>19</text:p>
     <text:p text:style-name="P30">4.3.5. @Transient<text:tab/>19</text:p>
     <text:p text:style-name="P28">5. Application Architecture<text:tab/>21</text:p>
     <text:p text:style-name="P29">5.1. Overview<text:tab/>21</text:p>
     <text:p text:style-name="P29">5.2. Application Class<text:tab/>21</text:p>
     <text:p text:style-name="P29">5.3. AddressBookMainView<text:tab/>22</text:p>
     <text:p text:style-name="P30">5.3.1. Overview of the User Interface<text:tab/>22</text:p>
     <text:p text:style-name="P29">5.4. Creating and Using a JPAContainer<text:tab/>24</text:p>
     <text:p text:style-name="P30">5.4.1. Using the JPAContainerFactory to Create a JPAContainer<text:tab/>24</text:p>
     <text:p text:style-name="P30">5.4.2. Setting the Entity Provider<text:tab/>24</text:p>
     <text:p text:style-name="P30">5.4.3. Binding a JPAContainer<text:tab/>25</text:p>
     <text:p text:style-name="P28">6. Creating, Reading, Updating, and Deleting<text:tab/>26</text:p>
     <text:p text:style-name="P29">6.1. Building the CRUD Area<text:tab/>26</text:p>
     <text:p text:style-name="P29">6.2. Creating an Item<text:tab/>27</text:p>
     <text:p text:style-name="P29">6.3. Editing an Item in a PersonEditor<text:tab/>28</text:p>
     <text:p text:style-name="P29">6.4. Deleting an Item<text:tab/>30</text:p>
     <text:p text:style-name="P28">7. Presenting Hierarchical Data<text:tab/>32</text:p>
     <text:p text:style-name="P29">7.1. JPAContainer is Hierarchical<text:tab/>32</text:p>
     <text:p text:style-name="P29">7.2. Defining Hierarchy Relationship<text:tab/>33</text:p>
     <text:p text:style-name="P30">7.2.1. Setting the Parent Reference Property<text:tab/>33</text:p>
     <text:p text:style-name="P30">7.2.2. Redefining the areChildrenAllowed() Behaviour<text:tab/>33</text:p>
     <text:p text:style-name="P29">7.3. Creating Hierarchical Entities<text:tab/>33</text:p>
     <text:p text:style-name="P28">8. Filtering Data<text:tab/>35</text:p>
     <text:p text:style-name="P29">8.1. Overview<text:tab/>35</text:p>
     <text:p text:style-name="P29">8.2. Filtering by Entity<text:tab/>35</text:p>
     <text:p text:style-name="P30">8.2.1. Setting the Filter<text:tab/>35</text:p>
     <text:p text:style-name="P30">8.2.2. Adding and Applying the Filter<text:tab/>36</text:p>
     <text:p text:style-name="P29">8.3. Filtering by a String Property Value<text:tab/>37</text:p>
     <text:p text:style-name="P28">9. Vaadin Bean Validation<text:tab/>38</text:p>
     <text:p text:style-name="P29">9.1. Overview<text:tab/>38</text:p>
     <text:p text:style-name="P29">9.2. Annotations<text:tab/>38</text:p>
     <text:p text:style-name="P29">9.3. Using the Validator<text:tab/>38</text:p>
     <text:p text:style-name="P30">9.3.1. Doing Validation<text:tab/>39</text:p>
     <text:p text:style-name="P30">9.3.2. Locale Setting for Bean Validation<text:tab/>40</text:p>
    </text:index-body>
   </text:table-of-content>
   <text:p text:style-name="Text_20_body"/>
   <text:h text:style-name="P34" text:outline-level="1">Introduction</text:h>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Overview</text:h>
   <text:p text:style-name="Text_20_body">Most business web applications need to either store data in or retrieve it from a database, or both. However, the data is rarely written directly from the user input to the database. Applications that follow a multilayered architecture have an intermediate business logic or <text:span text:style-name="T2">domain layer</text:span>, which is implemented as Java classes.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka2" text:anchor-type="as-char" svg:width="12.691cm" svg:height="3.784cm" draw:z-index="46"><draw:image xlink:href="../img/three-layer-architecture-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration0" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">1</text:sequence>: Three-Layer Architecture</text:p>
   <text:p text:style-name="Text_20_body">The data binding model in Vaadin can be used to bind user interface components to a domain layer. The purpose of <text:span text:style-name="T2">Java Persistence API</text:span> is to define how the Java classes of the domain layer are mapped to database tables. Using the mappings, the instances of such classes can be <text:span text:style-name="T2">persisted</text:span> – stored in and retrieved from the database – without writing complex queries and copying the values between the queries and the domain model.</text:p>
   <text:p text:style-name="Text_20_body">Vaadin JPAContainer allows connecting Vaadin user interface components directly to the persistent model objects. It is an implementation of the container interface defined in the Vaadin core framework. You can use the container to display data in a table, tree, any other selection component, or edit the data in a form.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka4" text:anchor-type="as-char" svg:width="12.555cm" svg:height="3.242cm" draw:z-index="8"><draw:image xlink:href="Pictures/10000201000005CB0000017F061832EE.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration1" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">2</text:sequence>: Role of JPAContainer in binding Vaadin components to a database</text:p>
   <text:p text:style-name="Text_20_body">In this tutorial, we revisit the Vaadin Tutorial presented in <text:a xlink:type="simple" xlink:href="https://vaadin.com/tutorial">vaadin.com/tutorial</text:a> and make a similar application with persistence using JPAContainer.</text:p>
   <text:p text:style-name="Text_20_body">But first, we start by going through the basic concepts of Vaadin data binding, Java Persistence API, JPA implementations, relational databases, and the role of JPAContainer to in the darkness<text:span text:style-name="T23"> </text:span><text:span text:style-name="Emphasis"><text:span text:style-name="T23">bind them</text:span></text:span>.</text:p>
   <text:p text:style-name="Text_20_body"><text:soft-page-break/>Then, we are ready to look into installing Vaadin JPAContainer or importing the JPAContainer AddressBook Demo, defining a domain model, and using the JPAContainer in an application.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Technologies Covered in the Tutorial</text:h>
   <text:p text:style-name="Text_20_body">The basic purpose of this tutorial is to demonstrate the use of the following technologies:</text:p>
   <text:list xml:id="list1858552029" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin Framework</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin JPAContainer</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Java Persistence API</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Java Bean Validation API</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Introducing_20_list">We use the following additional tools:</text:p>
   <text:list xml:id="list1509717795" text:continue-numbering="true" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">EclipseLink</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin Bean Validation add-on</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Hibernate Validator</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">H2 Database Engine</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">CustomField add-on</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Text_20_body">Any implementation of the Java Persistence API could be used, but in this tutorial we choose to use EclipseLink, which is the reference implementation of JPA 2.0. Its choice is only relevant in the project configuration.</text:p>
   <text:p text:style-name="Text_20_body">The Vaadin Bean Validation add-on allows validation of Vaadin forms using the Java Bean Validation API 1.0 (JSR-303). It is based on annotations for the bean properties. We use the Hibernate Validator as the chosen implementation of the API.</text:p>
   <text:p text:style-name="Text_20_body">For the back-end relational database, we use an in-memory database using the H2 database engine.</text:p>
   <text:p text:style-name="Text_20_body">The CustomField add-on allows creating composite field components much the same way as the standard CustomComponent in Vaadin core framework.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Vaadin Data Model</text:h>
   <text:p text:style-name="Text_20_body">Let us first recapture the Vaadin data model introduced in the <text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/datamodel.html">Chapter 9: </text:a><text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/datamodel.html"><text:span text:style-name="T2">Binding Components to Data</text:span></text:a> in Book of Vaadin. It consists of three levels of containment: <text:span text:style-name="T2">properties</text:span>, <text:span text:style-name="T2">items</text:span>, and <text:span text:style-name="T2">containers</text:span>.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:soft-page-break/>Properties</text:h>
   <text:p text:style-name="Introducing_20_list">Atomic data is represented as <text:span text:style-name="Class_20_Name">Property</text:span> objects that have a <text:span text:style-name="T2">value</text:span> and a <text:span text:style-name="T2">type</text:span>. Properties can be bound to <text:span text:style-name="Class_20_Name">Field</text:span> components, such as a <text:span text:style-name="Class_20_Name">TextField</text:span>, or a table cell.</text:p>
   <text:p text:style-name="Source_20_File_20_Start">// A property of some type</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">ObjectProperty&lt;String&gt; p =<text:line-break/> <text:s text:c="3"/><text:span text:style-name="Code_20_Keyword">new</text:span> ObjectProperty&lt;String&gt;(“<text:span text:style-name="T18">the property value</text:span>”);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle">// A field</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">TextField field = <text:span text:style-name="Code_20_Keyword">new</text:span> TextField(“<text:span text:style-name="T18">Name</text:span>”);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle">// Bind the field to the property</text:p>
   <text:p text:style-name="Source_20_File_20_End">field.setPropertyDataSource(p);</text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">ObjectProperty</text:span> used above is just one implementation of the <text:span text:style-name="Class_20_Name">Property</text:span> interface – in <text:span text:style-name="Class_20_Name">JPAContainer</text:span> we use a different property type.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Items</text:h>
   <text:p text:style-name="Text_20_body">An <text:span text:style-name="Class_20_Name">Item</text:span> is a collection of properties that is typically bound to a <text:span text:style-name="Class_20_Name">Form</text:span> or a row in a <text:span text:style-name="Class_20_Name">Table</text:span> or some other selection component. Properties of an item are identified by a <text:span text:style-name="T2">property identifier</text:span> (PID).</text:p>
   <text:p text:style-name="Source_20_File_20_Start">// Create an item with two properties</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">PropertysetItem item = <text:span text:style-name="Code_20_Keyword">new</text:span> PropertysetItem();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">item.addItemProperty(&quot;<text:span text:style-name="T18">name</text:span>&quot;,</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="21"/><text:span text:style-name="Code_20_Keyword">new</text:span> ObjectProperty&lt;String&gt;(&quot;<text:span text:style-name="T18">Zaphod</text:span>&quot;));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">item.addItemProperty(&quot;<text:span text:style-name="T18">age</text:span>&quot;,</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="21"/><text:span text:style-name="Code_20_Keyword">new</text:span> ObjectProperty&lt;Integer&gt;(42));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle">// Bind it to a form</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">Form form = <text:span text:style-name="Code_20_Keyword">new</text:span> Form();</text:p>
   <text:p text:style-name="Source_20_File_20_End">form.setItemDataSource(item);</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Containers</text:h>
   <text:p text:style-name="Text_20_body">A <text:span text:style-name="Class_20_Name">Container</text:span> is a collection of items, usually bound to a <text:span text:style-name="Class_20_Name">Table</text:span>, <text:span text:style-name="Class_20_Name">Tree</text:span>, or some other selection component. Items in a container are identified by an item identifier (IID). Normally, all the items in a container have the same type and the same properties.</text:p>
   <text:p text:style-name="Text_20_body">For a more detailed description of the Vaadin data model, please refer to Chapter 9: <text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/datamodel.html">Binding Components to Data</text:a>.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Normal (Non-Persistent) Binding to JavaBeans</text:h>
   <text:p text:style-name="Text_20_body">Vaadin core library provides <text:span text:style-name="Class_20_Name">BeanItem</text:span> implementation of the <text:span text:style-name="Class_20_Name">Item</text:span> interface to bind bean objects. At the <text:span text:style-name="Class_20_Name">Container</text:span> level, Vaadin provides the <text:span text:style-name="Class_20_Name">BeanItemContainer</text:span> and <text:span text:style-name="Class_20_Name">BeanContainer</text:span> implementations. They are very useful for handling transient (non-persistent) objects.</text:p>
   <text:p text:style-name="Source_20_File_20_Start">// Here is a bean</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="Code_20_Keyword">public</text:span> <text:span text:style-name="Code_20_Keyword">class</text:span> Bean <text:span text:style-name="Code_20_Keyword">implements</text:span> Serializable {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:s text:c="4"/>String <text:span text:style-name="Code_20_String">name</text:span>;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>double <text:span text:style-name="Code_20_String">energy</text:span>; // Energy content in kJ/100g</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">public</text:span> Bean(String name, double energy) {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">this</text:span>.<text:span text:style-name="Code_20_String">name</text:span> <text:s text:c="2"/>= name;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">this</text:span>.<text:span text:style-name="Code_20_String">energy</text:span> = energy;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">public</text:span> String getName() {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">return</text:span> <text:span text:style-name="Code_20_String">name</text:span>;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">public</text:span> <text:span text:style-name="Code_20_Keyword">void</text:span> setName(String name) {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">this</text:span>.<text:span text:style-name="Code_20_String">name</text:span> = name;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">public</text:span> <text:span text:style-name="Code_20_Keyword">double</text:span> getEnergy() {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">return</text:span> <text:span text:style-name="Code_20_String">energy</text:span>;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">public</text:span> <text:span text:style-name="Code_20_Keyword">void</text:span> setEnergy(double energy) {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/><text:span text:style-name="Code_20_Keyword">this</text:span>.<text:span text:style-name="Code_20_String">energy</text:span> = energy;</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle">... <text:s text:c="3"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle">// Create a container for such beans</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">BeanItemContainer&lt;Bean&gt; beans =</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/><text:span text:style-name="Code_20_Keyword">new</text:span> BeanItemContainer&lt;Bean&gt;(Bean.class);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle">// Add some beans to it</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">beans.addBean(<text:span text:style-name="Code_20_Keyword">new</text:span> Bean(<text:span text:style-name="Code_20_String">&quot;Mung bean&quot;</text:span>, <text:s text:c="2"/>1452.0));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">beans.addBean(<text:span text:style-name="Code_20_Keyword">new</text:span> Bean(<text:span text:style-name="Code_20_String">&quot;Chickpea&quot;</text:span>, <text:s text:c="3"/>686.0));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">beans.addBean(<text:span text:style-name="Code_20_Keyword">new</text:span> Bean(<text:span text:style-name="Code_20_String">&quot;Lentil&quot;</text:span>, <text:s text:c="5"/>1477.0));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">beans.addBean(<text:span text:style-name="Code_20_Keyword">new</text:span> Bean(<text:span text:style-name="Code_20_String">&quot;Common bean&quot;</text:span>, 129.0));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">beans.addBean(<text:span text:style-name="Code_20_Keyword">new</text:span> Bean(<text:span text:style-name="Code_20_String">&quot;Soybean&quot;</text:span>, <text:s text:c="4"/>1866.0));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle">// Bind a table to it</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">Table table = <text:span text:style-name="Code_20_Keyword">new</text:span> Table(<text:span text:style-name="Code_20_String">&quot;Beans of All Sorts&quot;</text:span>, beans);</text:p>
   <text:p text:style-name="Source_20_File_20_End">layout.addComponent(table);</text:p>
   <text:p text:style-name="Text_20_body">Actually, the classes added to a <text:span text:style-name="Class_20_Name">BeanItemContainer</text:span> do not need to be beans; only the setters and getters are relevant, and it is not necessary to implement <text:span text:style-name="Class_20_Name">Serializable</text:span> and have a default constructor.</text:p>
   <text:p text:style-name="Text_20_body">So, that should be simple. Next, we see how to persist Java classes.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Java Persistence API</text:h>
   <text:p text:style-name="Text_20_body">Java Persistence API (JPA) is an API for object-relational mapping (ORM) of Java objects to a relational database. In JPA and entity-relationship modeling in general, a Java class is considered an <text:span text:style-name="T2">entity</text:span>. Class (or entity) instances correspond with a row in a database table and member variables of a class with columns. Entities can also have relationships with other entities.</text:p>
   <text:p text:style-name="Text_20_body">Vaadin JPAContainer supports the JPA 2.0 standard.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:soft-page-break/>Persistence Metadata</text:h>
   <text:p text:style-name="Text_20_body">JPA requires metadata about the entities and their relationships. The metadata can be defined in an XML metadata file or with Java annotations defined in the <text:span text:style-name="Package_20_Name">javax.persistence</text:span> package. With JPAContainer, you need to provide the metadata as annotations.</text:p>
   <text:p text:style-name="Text_20_body">For example, if we look at the <text:span text:style-name="Class_20_Name">Person</text:span> class in the <text:span text:style-name="T23">JPAContainer AddressBook Demo</text:span>, we define various database-related metadata for the member variables of a class:</text:p>
   <text:p text:style-name="P17">@Entity</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> Person {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Id</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@GeneratedValue</text:span><text:span text:style-name="T6">(strategy = GenerationType.</text:span><text:span text:style-name="T15">AUTO</text:span><text:span text:style-name="T6">)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Long </text:span><text:span text:style-name="T14">id</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@NotNull</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Size</text:span><text:span text:style-name="T6">(min = 2, max = 24)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">firstName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Size</text:span><text:span text:style-name="T6">(min = 2, max = 24)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">lastName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@NotNull</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">department</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Text_20_body">The JPA implementation uses reflection to read the annotations and defines a database model automatically from the class definitions.</text:p>
   <text:p text:style-name="Text_20_body">JPA annotation is discussed in detail later in Section <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__3056_1659804707">4.3</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__3056_1659804707">Annotating the Classes for Persistence</text:bookmark-ref></text:span>.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">JPA Implementations</text:h>
   <text:p text:style-name="Text_20_body">Java Persistence API (JPA) is a specification that is implemented by various JPA implementations. EclipseLink is the reference implementation of JPA 2.0. It is found to be well suited for stateful applications, as is the case with Vaadin.</text:p>
   <text:p text:style-name="Text_20_body">Hibernate is another popular implementation of the standard, where the implementation is provided in Hibernate EntityManager, Hibernate Metamodel Generator, and Hibernate Annotations. </text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Rapid Start with Spring Roo</text:h>
   <text:p text:style-name="Text_20_body">Perhaps the quickest way to create a domain model and persist it with JPAContainer is to use Spring Roo, a rapid development tool for Java applications. It generates code that uses the Spring Framework, Java Persistence API, and Apache Maven. It also allows extending its functionality using add-ons, such as the Vaadin Plugin for Spring Roo. The Vaadin add-on can generate a user interface views based on the data model definitions given to Roo.</text:p>
   <text:p text:style-name="Text_20_body">For a Spring Roo tutorial with Vaadin, please refer to <text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/rapid.html">Chapter 12: </text:a><text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/rapid.html"><text:span text:style-name="T2">Rapid Development Using Vaadin and Roo</text:span></text:a> in the Book of Vaadin.</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1">Installing <text:subject>Vaadin JPAContainer</text:subject></text:h>
   <text:p text:style-name="Text_20_body">This chapter gives basic instructions for installing Vaadin JPAContainer in your own application. If you just wish to go on with the tutorial and install JPAContainer later, you can skip to Chapter <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__16398_1659804707">3</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__16398_1659804707">JPAContainer AddressBook Demo</text:bookmark-ref></text:span>.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Installation Options</text:h>
   <text:p text:style-name="Text_20_body">You have the following options for installing JPAContainer:</text:p>
   <text:list xml:id="list1896455474" text:continue-numbering="true" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Download installation package from Vaadin Directory</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Define a Maven dependency</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Create a new Vaadin project with a special archetype</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Downloading JPAContainer from Vaadin Directory</text:h>
   <text:p text:style-name="Text_20_body">JPAContainer is available for immediate download from the Vaadin Directory at <text:a xlink:type="simple" xlink:href="http://vaadin.com/directory#addon/vaadin-jpacontainer">http://vaadin.com/directory#addon/vaadin-jpacontainer</text:a>.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka6" text:anchor-type="as-char" svg:width="12.675cm" style:rel-width="84%" svg:height="5.851cm" style:rel-height="25%" draw:z-index="47"><draw:image xlink:href="../img/download-annotated-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration2" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">3</text:sequence>: Downloading JPAContainer from Vaadin Directory</text:p>
   <text:list xml:id="list1447063978" text:style-name="Numbering_20_1">
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select <text:span text:style-name="GUI_20_Label">Version</text:span> (the latest version is selected by default)</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Click <text:span text:style-name="GUI_20_Label">Download Now</text:span></text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select either <text:span text:style-name="GUI_20_Label">AGPL</text:span> or <text:span text:style-name="GUI_20_Label">CVAL</text:span> license</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Click <text:span text:style-name="GUI_20_Button">Proceed to download</text:span></text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">After downloading the installation package, extract its contents to a local folder using an appropriate ZIP extraction software for your operating system</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Dual Licensing Under AGPL and CVAL</text:h>
   <text:p text:style-name="Text_20_body">Vaadin JPAContainer is available under two licenses: <text:span text:style-name="T2">Affero General Public License</text:span> (AGPL) and <text:span text:style-name="T2">Commercial Vaadin Add-on License</text:span> (CVAL). If your project <text:soft-page-break/>is compatible with the open-source AGPL, you can use the add-on for free. Otherwise you must acquire a sufficient number of CVAL licenses before the 30-day trial period ends. Vaadin JPAContainer is distributed as a separate installation package for each license.</text:p>
   <text:p text:style-name="Text_20_body">Use of <draw:frame draw:style-name="fr6" draw:name="grafiikka5" text:anchor-type="char" svg:width="6.622cm" svg:height="1.016cm" draw:z-index="45"><draw:image xlink:href="Pictures/100000000000011F0000002CEBC4DD76.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame>Vaadin JPAContainer with the CVAL license is included in the Vaadin PRO subscription.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Installation Package Content</text:h>
   <text:p text:style-name="Text_20_body">Once extracted to a local folder, the contents of the installation directory are illustrated in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration3">4</text:sequence-ref>.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka7" text:anchor-type="as-char" svg:width="7.796cm" svg:height="9.458cm" draw:z-index="48"><draw:image xlink:href="../img/installation-contents.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration3" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">4</text:sequence>: Installation Package Contents</text:p>
   <text:p text:style-name="Introducing_20_list">The files in the installation package are as follows:</text:p>
   <text:p text:style-name="Dictionary_20_Term">README</text:p>
   <text:p text:style-name="Dictionary_20_Definition">A readme file describing the package contents.</text:p>
   <text:p text:style-name="Dictionary_20_Term">licensing.txt</text:p>
   <text:p text:style-name="Dictionary_20_Definition">General information about licensing.</text:p>
   <text:p text:style-name="Dictionary_20_Term">license-xxxx-y.y.txt</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The full license text for the library.</text:p>
   <text:p text:style-name="Dictionary_20_Term">vaadin-jpacontainer-xxxx-y.y-z.z.z.jar</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The actual Vaadin JPAContainer library. The <text:span text:style-name="Filename">xxxx</text:span> is the license name and <text:span text:style-name="Filename">y.y</text:span> its version number. The final <text:span text:style-name="Filename">z.z.z</text:span> is the version number of the Vaadin JPAContainer.</text:p>
   <text:p text:style-name="Dictionary_20_Term"><text:soft-page-break/>vaadin-jpacontainer-xxxx-y.y-z.z.z-javadoc.jar</text:p>
   <text:p text:style-name="Dictionary_20_Definition">JavaDoc documentation JAR for the library. You can use it for example in Eclipse by associating the JavaDoc JAR with the JPAContainer JAR in the build path settings of your project.</text:p>
   <text:p text:style-name="Dictionary_20_Term">apidocs</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The JavaDoc API documentation in plain HTML.</text:p>
   <text:p text:style-name="Dictionary_20_Term">jpacontainer-tutorial.pdf</text:p>
   <text:p text:style-name="Dictionary_20_Definition">This tutorial in PDF format.</text:p>
   <text:p text:style-name="Dictionary_20_Term">jpacontainer-tutorial</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The tutorial in HTML format. The latest version of the tutorial is always available at <text:a xlink:type="simple" xlink:href="http://vaadin.com/download/jpacontainer-tutorial/">vaadin.com/download/jpacontainer-tutorial/</text:a>.</text:p>
   <text:p text:style-name="Dictionary_20_Term">jpacontainer-addressbook-demo</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The JPAContainer AddressBook Demo project covered in this tutorial. You can compile and package the application as a WAR with “<text:span text:style-name="Parameter">mvn package</text:span>” or launch it in the Jetty web browser with “<text:span text:style-name="Parameter">mvn jetty:run</text:span>”. <text:s/>You can also import the demo project in Eclipse as described in Section <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__5264_1010636937">3.1.2</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__5264_1010636937">Importing from Existing Installation Folder</text:bookmark-ref></text:span>.</text:p>
   <text:p text:style-name="Dictionary_20_Term">jpacontainer-demo-z.z.z.war</text:p>
   <text:p text:style-name="Dictionary_20_Definition">The basic JPAContainer demo. It is somewhat more extensive than the AddressBook Demo.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Including Libraries in Your Project</text:h>
   <text:p text:style-name="Text_20_body">The Vaadin JPAContainer JAR must be included in the library folder of the web application. It is located in <text:span text:style-name="Filename">WEB-INF/lib</text:span> path in a web application. In a normal Eclipse web projects the path is <text:span text:style-name="Filename">WebContent/WEB-INF/lib</text:span>. In Maven projects the JARs are automatically included in the folder, as long as the dependencies are defined correctly.</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Required Libraries</text:h>
   <text:p text:style-name="Introducing_20_list">You will need the following JARs:</text:p>
   <text:list xml:id="list1289063737" text:continue-list="list1896455474" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin Framework Library</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin JPAContainer</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Java Persistence API 2.0 (<text:span text:style-name="Package_20_Name">javax.persistence</text:span> package)</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">JPA implementation (EclipseLink, Hibernate, …)</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Database driver or embedded engine (H2, HSQLDB, MySQL, …)</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Text_20_body">The Vaadin Framework library is automatically downloaded and updated by the Vaadin Plugin for Eclipse.</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4"><text:soft-page-break/>Optional Libraries</text:h>
   <text:p text:style-name="Introducing_20_list">Optional libraries included in the AddressBook Demo are:</text:p>
   <text:list xml:id="list913377225" text:continue-numbering="true" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Vaadin BeanValidation add-on</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Hibernate Validator</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Logging library (SLF4J, …)</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">CustomField add-on</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Example</text:h>
   <text:p text:style-name="Introducing_20_list">Below is an example listing of the JARs included in <text:span text:style-name="Filename">WEB-INF/lib</text:span> in the AddressBook demo. The exact version numbers may vary.</text:p>
   <text:p text:style-name="Source_20_File_20_Start">beanvalidation-addon-0.6.2.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">customfield-0.9.3.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">eclipselink-2.2.0.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">h2-1.3.160.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">hibernate-validator-4.2.0.Final.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">javax.persistence-2.0.0.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">jpacontainer-addon-agpl-3.0-2.0.0-SNAPSHOT.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">slf4j-api-1.6.1.jar</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">vaadin-6.7.1.jar</text:p>
   <text:p text:style-name="Source_20_File_20_End">validation-api-1.0.0.GA.jar</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__64529_1659804707"/><text:soft-page-break/>Defining Dependencies in Maven<text:bookmark-end text:name="__RefHeading__64529_1659804707"/></text:h>
   <text:p text:style-name="Introducing_20_list">You can find the dependency declaration for the JPAContainer add-on in the Vaadin Directory page, as illustrated in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration4">5</text:sequence-ref>.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka18" text:anchor-type="as-char" svg:width="6.987cm" svg:height="10.926cm" draw:z-index="49"><draw:image xlink:href="../img/maven-pom-dependency.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration4" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">5</text:sequence>: JPAContainer dependency declaration for Maven.</text:p>
   <text:p text:style-name="Text_20_body">The dependency definition needs to be put in the <text:span text:style-name="Filename">pom.xml</text:span> file in the project. The demo project requires also various other dependencies, namely for EclipseLink, H2 database, BeanValidator, etc. Please see how they are defined in the <text:span text:style-name="Filename">pom.xml</text:span>.</text:p>
   <text:p text:style-name="Text_20_body">Detailed instructions for using Vaadin Add-ons in Maven projects are given in Book of Vaadin Chapter 13: <text:span text:style-name="T2">Using Vaadin Add-ons</text:span>, in the Section <text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/addons.maven.html"><text:span text:style-name="T2">Using Add-ons in a Maven Project</text:span></text:a>.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Vaadin JPAContainer Maven Archetype</text:h>
   <text:p text:style-name="Text_20_body">If you wish to create a new JPAContainer enabled Vaadin project with Maven, you can use the <text:span text:style-name="Parameter">vaadin-archetype-jpacontainer</text:span> archetype. Please see the section <text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/getting-started.maven.html">Creating a Project with Maven</text:a> in the Book of Vaadin for details on creating a Vaadin project with a Maven archetype.</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1"><text:bookmark text:name="__RefHeading__16398_1659804707"/>JPAContainer AddressBook Demo<text:bookmark-end text:name="__RefHeading__16398_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body">In this JPAContainer tutorial, we create an application similar to the one presented in <text:a xlink:type="simple" xlink:href="https://vaadin.com/tutorial">vaadin.com/tutorial</text:a>, but with persistence.</text:p>
   <text:p text:style-name="Text_20_body">The demo project uses Maven, but you can set up a project just as well as a regular Eclipse project.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Importing the Tutorial Project</text:h>
   <text:p text:style-name="Text_20_body">Before proceeding further, you should import the demo project to your favorite IDE...well, let&apos;s say that is Eclipse. As the project is Maven-based, Eclipse users need to install the m2e (or m2eclipse for older versions) plugin to be able to import Maven projects.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Checking Out from Repository (optional)</text:h>
   <text:p text:style-name="Introducing_20_list">If you wish to use the latest version of the demo or do not have the Vaadin JPAContainer installation package at hand, you can check out the demo from the repository. If you do not wish to install Subclipse and the Subclipse SCM connector in Eclipse, which can cause some trouble sometimes, you can do the check-out from the command-line as follows:</text:p>
   <text:list xml:id="list387061723" text:continue-list="list1447063978" text:style-name="Numbering_20_1">
    <text:list-item text:start-value="1">
     <text:p text:style-name="Numbering_20_1">Install Subversion command-line tools or use some alternative Subversion client</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Run the following command in a terminal window or use some other Subversion client to do the checkout:</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="P13">$ svn co <text:a xlink:type="simple" xlink:href="http://dev.vaadin.com/svn/addons/JPAContainer/tru">http://dev.vaadin.com/svn/addons/JPAContain</text:a></text:p>
   <text:p text:style-name="P14"><text:a xlink:type="simple" xlink:href="http://dev.vaadin.com/svn/addons/JPAContainer/tru">er/tru</text:a><text:a xlink:type="simple" xlink:href="http://dev.vaadin.com/svn/addons/JPAContainer/trunk/jpacontainer-addressbook-demo">nk/jpacontainer-addressbook-demo</text:a></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark text:name="__RefHeading__5264_1010636937"/>Importing from Existing Installation Folder<text:bookmark-end text:name="__RefHeading__5264_1010636937"/></text:h>
   <text:p text:style-name="Introducing_20_list">The demo project is included in the Vaadin JPAContainer installation package. Once extracted to a local folder or checked out from the repository as described above, you can import it in Eclipse as follows:</text:p>
   <text:list xml:id="list598266987" text:continue-list="list387061723" text:style-name="Numbering_20_1">
    <text:list-item text:start-value="1">
     <text:p text:style-name="Numbering_20_1">Install m2e in Eclipse if you have not done so already</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select <text:span text:style-name="GUI_20_Label">File → Import</text:span> in Eclipse</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select <text:span text:style-name="GUI_20_Label">Maven → Existing Maven Projects</text:span>, and click <text:span text:style-name="GUI_20_Button">Next</text:span>.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Click <text:span text:style-name="GUI_20_Button">Browse</text:span> to select the <text:span text:style-name="Filename">jpacontainer-addressbook-demo</text:span> folder where you checked out the project.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Click <text:span text:style-name="GUI_20_Button">Finish</text:span>.</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:soft-page-break/>Import from Repository Using Subclipse</text:h>
   <text:p text:style-name="Introducing_20_list">If you have installed Subclipse in Eclipse, you should be able to import the demo project a bit easier as follows:</text:p>
   <text:list xml:id="list513665119" text:continue-list="list598266987" text:style-name="Numbering_20_1">
    <text:list-item text:start-value="1">
     <text:p text:style-name="Numbering_20_1">Install m2e in Eclipse if you have not done so already</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select <text:span text:style-name="T24">File </text:span>→ <text:span text:style-name="T24">Import</text:span></text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Select <text:span text:style-name="GUI_20_Label">Maven → Check out Maven Project from SCM</text:span>, and click <text:span text:style-name="GUI_20_Button">Next</text:span>.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">In <text:span text:style-name="GUI_20_Label">SCM URL</text:span>, select <text:span text:style-name="GUI_20_Label">svn</text:span> and enter URL <text:a xlink:type="simple" xlink:href="http://dev.vaadin.com/svn/addons/JPAContainer/trunk/jpacontainer-addressbook-demo">http://dev.vaadin.com/svn/addons/JPAContainer/trunk/jpacontainer-addressbook-demo</text:a></text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Click <text:span text:style-name="GUI_20_Button">Finish</text:span>.</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Browsing the Application</text:h>
   <text:p text:style-name="Text_20_body">Importing the project takes a while. After it is finished, please take some time to inspect the project structure and files in Eclipse. The <text:span text:style-name="GUI_20_Label">Project Explorer</text:span> in Eclipse organizes Java source files in source folders, as illustrated in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration5">6</text:sequence-ref>.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka8" text:anchor-type="as-char" svg:width="9.149cm" svg:height="12.09cm" draw:z-index="50"><draw:image xlink:href="../img/addressbook-project-contents.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="Caption"><text:span text:style-name="T21">Figure </text:span><text:span text:style-name="T21"><text:sequence text:ref-name="refIllustration5" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">6</text:sequence></text:span><text:span text:style-name="T21">: Browsing the project contents with Project Explorer in Eclipse.</text:span></text:p>
   <text:p text:style-name="P21"><text:soft-page-break/>com.vaadin.demo.jpaaddressbook</text:p>
   <text:p text:style-name="Dictionary_20_Definition"><text:span text:style-name="T21">The JPAContainer AddressBook Demo package, which contains the application class (Section </text:span><text:span text:style-name="T21"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__61139_1659804707">5.2</text:bookmark-ref></text:span><text:span text:style-name="T21">: </text:span><text:span text:style-name="T3"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__61139_1659804707">Application Class</text:bookmark-ref></text:span><text:span text:style-name="T21">), the main view class (Section </text:span><text:span text:style-name="T21"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__63704_1659804707">5.3</text:bookmark-ref></text:span><text:span text:style-name="T21">: </text:span><text:span text:style-name="T3"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__63704_1659804707">AddressBookMainView</text:bookmark-ref></text:span><text:span text:style-name="T21">), some UI classes and some helpers.</text:span></text:p>
   <text:p text:style-name="P21">com.vaadin.demo.jpaaddressbook.domain</text:p>
   <text:p text:style-name="Dictionary_20_Definition"><text:span text:style-name="T21">Domain classes as described in Chapter </text:span><text:span text:style-name="T21"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__32776_1659804707">4</text:bookmark-ref></text:span><text:span text:style-name="T21">: </text:span><text:span text:style-name="T3"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__32776_1659804707">Defining a Domain Model</text:bookmark-ref></text:span><text:span text:style-name="T21">.</text:span></text:p>
   <text:p text:style-name="P21">src/main/resources/META-INF/persistence.xml</text:p>
   <text:p text:style-name="Dictionary_20_Definition"><text:span text:style-name="T21">The persistence configuration, as described in Section </text:span><text:span text:style-name="T21"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__63975_1659804707">3.3</text:bookmark-ref></text:span><text:span text:style-name="T21">: </text:span><text:span text:style-name="T3"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__63975_1659804707">Persistence Configuration</text:bookmark-ref></text:span><text:span text:style-name="T21">.</text:span></text:p>
   <text:p text:style-name="P21">pom.xml</text:p>
   <text:p text:style-name="Dictionary_20_Definition"><text:span text:style-name="T21">Maven project configuration file (Portable Object Model). It is a somewhat regular configuration for Vaadin application, as described in the Section 2.5: </text:span><text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/getting-started.maven.html"><text:span text:style-name="T21">Creating a Project with Maven</text:span></text:a><text:span text:style-name="T21"> in the Book of Vaadin. The most relevant parts are the Vaadin JPAContainer and other dependency definitions, as mentioned in Section </text:span><text:span text:style-name="T21"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__64529_1659804707">2.5</text:bookmark-ref></text:span><text:span text:style-name="T21">: </text:span><text:span text:style-name="T3"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__64529_1659804707">Defining Dependencies in Maven</text:bookmark-ref></text:span><text:span text:style-name="T21">.</text:span></text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__63975_1659804707"/>Persistence Configuration<text:bookmark-end text:name="__RefHeading__63975_1659804707"/></text:h>
   <text:p text:style-name="Introducing_20_list">Persistence configuration is done in a <text:span text:style-name="Filename">persistence.xml</text:span> file. In the demo project, it is located in <text:span text:style-name="Filename">src/main/resources/META-INF</text:span> folder. The configuration includes defining the following:</text:p>
   <text:list xml:id="list1393437635" text:continue-list="list913377225" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">The persistence unit</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">The persistence provider</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">The database driver and connection</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Logging</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Filename">persistence.xml</text:span> file is packaged as <text:span text:style-name="Filename">WEB-INF/classes/META-INF/persistence.xml</text:span> in the WAR. This is done automatically in a Maven build at the <text:span text:style-name="Parameter">package</text:span> phase.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Persistence XML Schema</text:h>
   <text:p text:style-name="Introducing_20_list">The beginning of the <text:span text:style-name="Filename">persistence.xml</text:span> file defines the used schema and namespaces:</text:p>
   <text:p text:style-name="P15"><text:span text:style-name="T27">&lt;?</text:span><text:span text:style-name="T30">xml</text:span> <text:span text:style-name="T33">version</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;1.0&quot;</text:span> <text:span text:style-name="T33">encoding</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;UTF-8&quot;</text:span><text:span text:style-name="T27">?&gt;</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">persistence</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T32"><text:s text:c="4"/></text:span><text:span text:style-name="T34">xmlns</text:span><text:span text:style-name="T36">=</text:span><text:span text:style-name="T20">&quot;</text:span><text:a xlink:type="simple" xlink:href="http://java.sun.com/xml/ns/persistence">http://java.sun.com/xml/ns/persistence</text:a><text:span text:style-name="T20">&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T34"><text:s text:c="4"/>xmlns:xsi</text:span><text:span text:style-name="T36">=</text:span><text:span text:style-name="T20">&quot;</text:span><text:a xlink:type="simple" xlink:href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</text:a><text:span text:style-name="T20">&quot;</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T33"><text:s text:c="4"/>xsi:schemaLocation</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T20"><text:s text:c="6"/></text:span><text:a xlink:type="simple" xlink:href="http://java.sun.com/xml/ns/persistence">http://java.sun.com/xml/ns/persistence</text:a></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T20"><text:s text:c="6"/></text:span><text:a xlink:type="simple" xlink:href="http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd</text:a><text:span text:style-name="T20">&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T20"><text:s text:c="4"/></text:span><text:span text:style-name="T34">version</text:span><text:span text:style-name="T36">=</text:span><text:span text:style-name="T20">&quot;2.0&quot;</text:span><text:span text:style-name="T29">&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:soft-page-break/>Defining the Persistence Unit</text:h>
   <text:p text:style-name="Text_20_body">The root element of the persistence definition is <text:span text:style-name="Parameter">persistence-unit</text:span>. Its name attribute is used in the application when referring to the persistence unit. In Section <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__61139_1659804707">5.2</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__61139_1659804707">Application Class</text:bookmark-ref></text:span> we define a global <text:span text:style-name="Parameter">PERSISTENCE_UNIT</text:span> identifier for referring to the unit.</text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="4"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">persistence-unit</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;addressbook&quot;</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Persistence Provider</text:h>
   <text:p text:style-name="Introducing_20_list">The <text:span text:style-name="Parameter">provider</text:span> is the JPA provider implementation used. We use the EclipseLink JPA, so we define its provider class here.</text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="8"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">provider</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T27"><text:s text:c="12"/></text:span><text:span text:style-name="T35">org.eclipse.persistence.jpa.PersistenceProvider</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="8"/></text:span><text:span text:style-name="T27">&lt;/</text:span><text:span text:style-name="T30">provider</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Listing the Persistent Classes</text:h>
   <text:p text:style-name="Introducing_20_list">In this example, we allow including unlisted classes for persistence. The alternative is to specify each persistent class with a <text:span text:style-name="Parameter">&lt;class&gt;</text:span> element.</text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="8"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">exclude-unlisted-classes</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T27"><text:s text:c="12"/></text:span><text:span text:style-name="T35">false</text:span></text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="8"/></text:span><text:span text:style-name="T27">&lt;/</text:span><text:span text:style-name="T30">exclude-unlisted-classes</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list">JPA provider specific parameters are specified under the <text:span text:style-name="Parameter">properties</text:span> element. As we use EclipseLink JPA, the parameters are specific to that. If you use another provider, please refer to its documentation for the parameters.</text:p>
   <text:p text:style-name="P9"><text:span text:style-name="T35"><text:s text:c="8"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">properties</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="P11"><text:s text:c="11"/>…</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Database Connection</text:h>
   <text:p text:style-name="Introducing_20_list">EclipseLink allows using JDBC for database connection. We use the H2 database, so we need to define its driver here.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.jdbc.platform&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T33">value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;org.eclipse.persistence.platform.database.H2Platform&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.jdbc.driver&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T19"><text:s text:c="10"/></text:span><text:span text:style-name="T33">value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;org.h2.Driver&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="P23">We use an in-memory database for the demo with the following connection URL definition:</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.jdbc.url&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T19"><text:s text:c="10"/></text:span><text:span text:style-name="T33">value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;jdbc:h2:˜/jpacontaineraddressbookh2db&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="P23">We can just use the default user name and password for the H2 database.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.jdbc.user&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="10"/><text:span text:style-name="T33">value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;sa&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.jdbc.password&quot;</text:span> </text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T33"><text:s text:c="10"/>value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;sa&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3"><text:soft-page-break/>Logging Configuation</text:h>
   <text:p text:style-name="Introducing_20_list">We set the logging level for EclipseLink JPA:</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.logging.level&quot;</text:span> </text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T33"><text:s text:c="10"/>value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;FINE&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Other Settings</text:h>
   <text:p text:style-name="Introducing_20_list">The rest is some Data Definition Language settings for EclipseLink. During development, when we use generated example data, we want EclipseLink to drop tables before trying to create them. In production environments, you should use “<text:span text:style-name="Parameter">create-tables</text:span>”.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:s text:c="3"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.ddl-generation&quot;</text:span> </text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T33"><text:s text:c="13"/>value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;drop-and-create-tables&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list">And there&apos;s no need to generate SQL files, just execute them directly to the database.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/> <text:s text:c="2"/></text:span><text:span text:style-name="T27">&lt;</text:span><text:span text:style-name="T30">property</text:span> <text:span text:style-name="T33">name</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;eclipselink.ddl-generation.output-mode&quot;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="13"/><text:span text:style-name="T33">value</text:span><text:span text:style-name="T35">=</text:span><text:span text:style-name="T19">&quot;database&quot;</text:span> <text:span text:style-name="T27">/&gt;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:tab/> <text:s/></text:span><text:span text:style-name="T27">&lt;/</text:span><text:span text:style-name="T30">properties</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T35"><text:s/></text:span><text:span text:style-name="T27">&lt;/</text:span><text:span text:style-name="T30">persistence-unit</text:span><text:span text:style-name="T27">&gt;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T28">&lt;/</text:span><text:span text:style-name="T31">persistence</text:span><text:span text:style-name="T28">&gt;</text:span></text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Running the Application</text:h>
   <text:p text:style-name="Text_20_body">If you imported the project as a Maven project, you can launch it in a server as follows:</text:p>
   <text:list xml:id="list1255173753" text:continue-list="list513665119" text:style-name="Numbering_20_1">
    <text:list-item text:start-value="1">
     <text:p text:style-name="Numbering_20_1">Stop any web server you may have running in port 8080.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Right-click the project folder in Project Explorer and select <text:span text:style-name="GUI_20_Label">Run As → Maven Build...</text:span>.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">In the <text:span text:style-name="GUI_20_Label">Edit Configuration</text:span> window that opens, enter “<text:span text:style-name="Parameter">package jetty:run</text:span>” in the <text:span text:style-name="GUI_20_Label">Goals</text:span> field and click <text:span text:style-name="GUI_20_Button">Run</text:span>. Wait for a while as the light-weight Jetty web server is launched.</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="Numbering_20_1">Open a web browser with URL <text:a xlink:type="simple" xlink:href="http://localhost:8080/">http://localhost:8080/</text:a>.</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Text_20_body">The AddressBook Demo application should work as shown in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration6">7</text:sequence-ref>.</text:p>
   <text:p text:style-name="Illustration"><text:soft-page-break/><draw:frame draw:style-name="fr5" draw:name="grafiikka9" text:anchor-type="as-char" svg:width="12.691cm" svg:height="7.934cm" draw:z-index="51"><draw:image xlink:href="../img/addressbook-window.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration6" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">7</text:sequence>: JPAContainer AddressBook Demo.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Browsing the Sources Online</text:h>
   <text:p text:style-name="Text_20_body">You can also browse the source code of the demo project on-line at <text:a xlink:type="simple" xlink:href="http://dev.vaadin.com/browser/svn/addons/JPAContainer/trunk/jpacontainer-addressbook-demo">http://dev.vaadin.com/browser/svn/addons/JPAContainer/trunk/jpacontainer-addressbook-demo</text:a>.</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1"><text:bookmark text:name="__RefHeading__32776_1659804707"/>Defining a Domain Model<text:bookmark-end text:name="__RefHeading__32776_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body">In this chapter, we look into defining a domain model, implementing it as Java classes, and then enabling persistence by annotating the classes with JPA annotations.</text:p>
   <text:h text:style-name="P32" text:outline-level="2">A Domain Model</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T21">The AddressBook has a simple domain model with two entities: a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T22">Person</text:span></text:span><text:span text:style-name="T21"> and a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T22">Department</text:span></text:span><text:span text:style-name="T21">.</text:span></text:p>
   <text:p text:style-name="P19"><draw:frame draw:style-name="fr5" draw:name="grafiikka1" text:anchor-type="as-char" svg:width="9.938cm" svg:height="4.496cm" draw:z-index="9"><draw:image xlink:href="../img/domain-model-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration7" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">8</text:sequence>: Domain Model</text:p>
   <text:p text:style-name="Text_20_body">A <text:span text:style-name="Class_20_Name">Department</text:span> has an integer (Long) identifier and a name. Departments have a hierarchy, which is represented by a <text:span text:style-name="Parameter">parent</text:span> reference. Each department has <text:span text:style-name="T2">n</text:span> persons working in it.</text:p>
   <text:p text:style-name="Text_20_body">A <text:span text:style-name="Class_20_Name">Person</text:span> has also an integer (Long) identifier and a first and last names, as well as basic contact information. A person works in a department.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Defining the Classes</text:h>
   <text:p text:style-name="Text_20_body">The classes are defined in the <text:span text:style-name="Package_20_Name">com.vaadin.demo.jpaaddressbook.domain</text:span> package of the demo project.</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Department Class</text:h>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">Department</text:span> class is defined from the domain model in as follows:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> Department {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Long </text:span><text:span text:style-name="T14">id</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">name</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Set&lt;Person&gt; </text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Boolean </text:span><text:span text:style-name="T14">superDepartment</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">parent</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>… setters and getters …</text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:p text:style-name="Text_20_body"><text:soft-page-break/>Notice that we added a <text:span text:style-name="Method_20_Name">superDepartment</text:span> member that was not in the domain model. It is a shorthand variable that is only used internally for optimization to mark departments that only have sub-department and no personnel.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">boolean</text:span><text:span text:style-name="T6"> isSuperDepartment() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">superDepartment</text:span><text:span text:style-name="T6"> == </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">superDepartment</text:span><text:span text:style-name="T6"> = getPersons().size() == 0;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">return</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T14">superDepartment</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:p text:style-name="Text_20_body">In addition, we define a <text:span text:style-name="Method_20_Name">hierarchicalName</text:span> property that only has a getter and is not associated with a member variable. Its value is the hierarchy path calculated dynamically using the <text:span text:style-name="Method_20_Name">toString()</text:span> method.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> String getHierarchicalName() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">parent</text:span><text:span text:style-name="T6"> != </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">return</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T14">parent</text:span><text:span text:style-name="T6">.toString() + </text:span><text:span text:style-name="T18">&quot; : &quot;</text:span><text:span text:style-name="T6"> + </text:span><text:span text:style-name="T14">name</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">return</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T14">name</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle">}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> String toString() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">return</text:span><text:span text:style-name="T6"> getHierarchicalName();</text:span></text:p>
   <text:p text:style-name="P26">}</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Person Class</text:h>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">Person</text:span> class is defined from the domain model in as follows:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> Person {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Long </text:span><text:span text:style-name="T14">id</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">firstName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">lastName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">street</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">city</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">zipCode</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">phoneNumber</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">department</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>… setters and getters …</text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__3056_1659804707"/><text:soft-page-break/>Annotating the Classes for Persistence<text:bookmark-end text:name="__RefHeading__3056_1659804707"/></text:h>
   <text:p text:style-name="Introducing_20_list">Let us look at the basic JPA metadata annotations as they are used in the <text:span text:style-name="Class_20_Name">Department</text:span> class of the tutorial project. The annotations are defined in the <text:span text:style-name="Package_20_Name">javax.persistence</text:span> package. Please refer to JPA reference documentation for the complete list of possible annotations.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">@Entity</text:h>
   <text:p text:style-name="Introducing_20_list">Each class that is enabled as a persistent entity must have the <text:span text:style-name="Parameter">@Entity</text:span> annotation.</text:p>
   <text:p text:style-name="P18">@Entity</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> Department {</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">@Id</text:h>
   <text:p text:style-name="Introducing_20_list">Entities must have an identifier that is used as the primary key for the table. It is used for various purposes in database queries, most commonly for joining tables.</text:p>
   <text:p text:style-name="P16">@Id</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T13">@GeneratedValue</text:span><text:span text:style-name="T6">(strategy = GenerationType.</text:span><text:span text:style-name="T15">AUTO</text:span><text:span text:style-name="T6">)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Long </text:span><text:span text:style-name="T14">id</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Text_20_body">The identifier is generated automatically in the database. <text:s/>The strategy for generating the identifier is defined with the <text:span text:style-name="Parameter">@GeneratedValue</text:span> annotation.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">@OneToMany</text:h>
   <text:p text:style-name="Introducing_20_list">As noted earlier, entities can have relationships. The <text:span text:style-name="Class_20_Name">Department</text:span> entity of the domain model has one-to-many relationship with the <text:span text:style-name="Class_20_Name">Person</text:span> entity (“Department has persons”). This relationship is represented with the <text:span text:style-name="Parameter">@OneToMany</text:span> annotation.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T13">@OneToMany</text:span><text:span text:style-name="T6">(mappedBy = </text:span><text:span text:style-name="T18">&quot;</text:span><text:span text:style-name="Code_20_String"><text:span text:style-name="T18">department</text:span></text:span><text:span text:style-name="T18">&quot;</text:span><text:span text:style-name="T6">)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Set&lt;Person&gt; </text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">@ManyToOne</text:h>
   <text:p text:style-name="Introducing_20_list">Many departments can belong to the same higher-level department, represented with <text:span text:style-name="Parameter">@ManyToOne</text:span> annotation.</text:p>
   <text:p text:style-name="P16">@ManyToOne</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">parent</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">@Transient</text:h>
   <text:p text:style-name="Introducing_20_list">Properties that are not persisted are marked as transient with the <text:span text:style-name="Parameter">@Transient</text:span> annotation.</text:p>
   <text:p text:style-name="P16">@Transient</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Boolean </text:span><text:span text:style-name="T14">superDepartment</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10">…</text:p>
   <text:p text:style-name="P12">@Transient</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> String getHierarchicalName() {</text:span></text:p>
   <text:p text:style-name="P25">…</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1">Application Architecture</text:h>
   <text:p text:style-name="Text_20_body">This chapter describes the top-level user interface architecture of the JPAContainer AddressBook application.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Overview</text:h>
   <text:p text:style-name="Text_20_body">The AddressBook application in the regular Vaadin Tutorial provides a reference architecture for Vaadin projects. The JPAContainer AddressBook takes this architecture further by including the persistence layer. It demonstrates the following tasks:</text:p>
   <text:list xml:id="list971283248" text:continue-list="list1393437635" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Building a user interface view</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Binding the UI to the persistent domain model with JPAContainer</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Management of JPAContainer instances with a container factory</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Persistence using EntityManager</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Use of the ThreadLocal pattern to access global data</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Filtering a JPAContainer</text:p>
    </text:list-item>
   </text:list>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__61139_1659804707"/>Application Class<text:bookmark-end text:name="__RefHeading__61139_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">JpaAddressbookApplication</text:span> is the main class of the application.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka11" text:anchor-type="as-char" svg:width="5.2cm" svg:height="6.001cm" draw:z-index="52"><draw:image xlink:href="../img/application-class-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration8" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">9</text:sequence>: AddressBook Application Class</text:p>
   <text:p text:style-name="Text_20_body">The application class has the following tasks:</text:p>
   <text:list xml:id="list1251527343" text:continue-numbering="true" text:style-name="WW8Num24">
    <text:list-item>
     <text:p text:style-name="List_20_1">Hold a global identifier for the persistence unit</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Generate example data in the database</text:p>
    </text:list-item>
    <text:list-item>
     <text:p text:style-name="List_20_1">Create the main view</text:p>
    </text:list-item>
   </text:list>
   <text:p text:style-name="Introducing_20_list"><text:soft-page-break/>The application class is defined in the <text:span text:style-name="Package_20_Name">com.vaadin.demo.jpaaddressbook</text:span> package as follows:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">JpaAddressbookApplication</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T12"><text:s text:c="7"/></text:span><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T6"> Application </text:span>{</text:p>
   <text:p text:style-name="Introducing_20_list">We hold a globally accessible identifier string for the persistence unit in the application class. It is used for instantiating a <text:span text:style-name="Class_20_Name">JPAContainer</text:span> or an entity manager.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">static</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">final</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T15">PERSISTENCE_UNIT</text:span><text:span text:style-name="T6"> =</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="45"/></text:span><text:span text:style-name="T18">&quot;addressbook&quot;</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list">The demo data is static global data generated already during the initialization of the application class as follows:</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">static</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>DemoDataGenerator.<text:span text:style-name="T2">create</text:span>();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Introducing_20_list">The <text:span text:style-name="Method_20_Name">init()</text:span> method of the application is trivial as the application only has one view which is managed in the <text:span text:style-name="Class_20_Name">AddressBookMainView</text:span> class:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> init() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>Window window = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Window();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>setMainWindow(window);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>window.setContent(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> AddressBookMainView());</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>}</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__63704_1659804707"/>AddressBookMainView<text:bookmark-end text:name="__RefHeading__63704_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body">The main view of the application is realized in the <text:span text:style-name="Class_20_Name">AddressBookMainView</text:span> class, which also handles most of the user interface logic. It extends from <text:span text:style-name="Class_20_Name">HorizontalSplitPanel</text:span> to allow the user to resize the content.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Overview of the User Interface</text:h>
   <text:p text:style-name="Text_20_body">The main view is shown in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration9">10</text:sequence-ref>.</text:p>
   <text:p text:style-name="Text_20_body">On the left side of the split panel, we have a <text:span text:style-name="Class_20_Name">Tree</text:span> component, which lets the user to browse and select a department that is used to filter the table on the right.</text:p>
   <text:p text:style-name="Text_20_body">On the right side, we have a <text:span text:style-name="Class_20_Name">Table</text:span> component, which shows all the persons in the selected department, and if no department is selected, all persons. It also contains buttons for adding, deleting, and editing items, as described in detail in Chapter <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__49626_1659804707">6</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__49626_1659804707">Creating, Reading, Updating, and Deleting</text:bookmark-ref></text:span>.</text:p>
   <text:p text:style-name="Illustration"><text:soft-page-break/><draw:frame draw:style-name="fr5" draw:name="grafiikka13" text:anchor-type="as-char" svg:width="12.691cm" svg:height="7.02cm" draw:z-index="53"><draw:image xlink:href="../img/addressbookmainview-annotated-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="Caption"><text:span text:style-name="T21">Figure </text:span><text:span text:style-name="T21"><text:sequence text:ref-name="refIllustration9" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">10</text:sequence></text:span><text:span text:style-name="T21">: AddreddBookMainView</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T21">The underlying class relationships for the user interface are shown in Figure </text:span><text:span text:style-name="T21"><text:sequence-ref text:reference-format="value" text:ref-name="refIllustration10">11</text:sequence-ref></text:span><text:span text:style-name="T21">.</text:span></text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka12" text:anchor-type="as-char" svg:width="6.223cm" svg:height="11.098cm" draw:z-index="54"><draw:image xlink:href="../img/addressbookmainview-class-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration10" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">11</text:sequence>: AddressBookMainView class diagram</text:p>
   <text:p text:style-name="Text_20_body">Both the <text:span text:style-name="Class_20_Name">Tree</text:span> and the <text:span text:style-name="Class_20_Name">Table</text:span> are bound to a <text:span text:style-name="Class_20_Name">JPAContainer</text:span> holding <text:span text:style-name="Class_20_Name">Department</text:span> and <text:span text:style-name="Class_20_Name">Person</text:span> objects, respectively.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:soft-page-break/>Creating and Using a JPAContainer</text:h>
   <text:p text:style-name="Introducing_20_list">The constructor of <text:span text:style-name="Class_20_Name">AddressBookMainView</text:span> creates the <text:span text:style-name="Class_20_Name">JPAContainer</text:span>s for the <text:span text:style-name="Class_20_Name">Department</text:span> and <text:span text:style-name="Class_20_Name">Person</text:span> objects shown in the tree and the table. References to the containers are kept for shorthand in member variables.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T12">AddressBookMainView</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="7"/><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T8"> HorizontalSplitPanel</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="7"/></text:span><text:span text:style-name="T4">implements</text:span> ComponentContainer {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="3"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="3"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T10">JPAContainer&lt;Department&gt;</text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T17">departments</text:span><text:span text:style-name="T10">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="3"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> JPAContainer&lt;Person&gt; </text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="3"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="3"/>public</text:span><text:span text:style-name="T8"> AddressBookMainView() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="7"/></text:span><text:span text:style-name="T14">departments</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> HierarchicalDepartmentContainer();</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">HierarchicalDepartmentContainer</text:span></text:span><text:span text:style-name="T6"> and how it is bound to an entity manager as described is Section </text:span><text:span text:style-name="T6"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__48460_1659804707">5.4.2</text:bookmark-ref></text:span><text:span text:style-name="T6">: </text:span><text:span text:style-name="T9"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__48460_1659804707">Setting the Entity Provider</text:bookmark-ref></text:span><text:span text:style-name="T6"> below.</text:span></text:p>
   <text:h text:style-name="P37" text:outline-level="3">Using the JPAContainerFactory to Create a JPAContainer</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="Class_20_Name">JPAContainerFactory</text:span> contains static methods for building <text:span text:style-name="Class_20_Name">JPAContainer</text:span>s from either a persistence context name (persistence unit) or from a <text:span text:style-name="Class_20_Name">EntityManager</text:span> instance.</text:p>
   <text:p text:style-name="Text_20_body">The static <text:span text:style-name="Method_20_Name">make()</text:span> method used in the demo creates a new <text:span text:style-name="Class_20_Name">JPAContainer</text:span> backed by a <text:span text:style-name="Class_20_Name">CachingMutableLocalEntityProvider</text:span>, using the name of the persistence unit. This particular method can be used if you do not know and do not need or want to know the instance of an <text:span text:style-name="Class_20_Name">EntityManager</text:span> that is used, which is the case in simple instances. An instance of <text:span text:style-name="Class_20_Name">EntityManagerFactory</text:span> will be created for the persistence unit and used to build entity managers.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6"> = JPAContainerFactory.</text:span><text:span text:style-name="T9">make</text:span><text:span text:style-name="T6">(Person.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/>JpaAddressbookApplication.</text:span><text:span text:style-name="T15">PERSISTENCE_UNIT</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P25"><text:s text:c="4"/>…</text:p>
   <text:h text:style-name="P37" text:outline-level="3"><text:bookmark text:name="__RefHeading__48460_1659804707"/>Setting the Entity Provider<text:bookmark-end text:name="__RefHeading__48460_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">If you create a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6"> object without the factory, as we did for the </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">departments</text:span></text:span><text:span text:style-name="T6"> container earlier, you must set an entity provider for it before you can use it. For the </text:span><text:span text:style-name="Class_20_Name">HierarchicalDepartmentContainer</text:span>, we set it in the constructor. We use the efficient <text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">CachingLocalEntityProvider</text:span></text:span><text:span text:style-name="T6"> as there is no need to make modifications through this container.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">HierarchicalDepartmentContainer</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T11"><text:s text:c="6"/></text:span><text:span text:style-name="T6"><text:s/></text:span><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T6"> JPAContainer&lt;Department&gt; {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> HierarchicalDepartmentContainer() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">super</text:span><text:span text:style-name="T6">(Department.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="P10"><text:s text:c="8"/>// Create and set the entity provider</text:p>
   <text:p text:style-name="P10"><text:s text:c="8"/>setEntityProvider(</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="12"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> CachingLocalEntityProvider&lt;Department&gt;(</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="16"/>Department.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="16"/>JPAContainerFactory</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:span text:style-name="T6"><text:s text:c="18"/>.</text:span><text:span text:style-name="T9">createEntityManagerForPersistenceUnit</text:span><text:span text:style-name="T6">(</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="22"/>JpaAddressbookApplication</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="26"/>.</text:span><text:span text:style-name="T15">PERSISTENCE_UNIT</text:span><text:span text:style-name="T6">)));</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="8"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The underlying JPA entity manager is created with the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainerFactory</text:span></text:span><text:span text:style-name="T6"> using the </text:span><text:span text:style-name="T9">createEntityManagerForPersistenceUnit()</text:span> method. The factory caches the entity managers for each persistence unit. In the demo application, it is always the one identified with the <text:span text:style-name="Parameter">PERSISTENCE_UNIT</text:span> in the application class.</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Binding a JPAContainer</text:h>
   <text:p text:style-name="Introducing_20_list">Binding the <text:span text:style-name="Class_20_Name">Person</text:span> table to the <text:span text:style-name="Class_20_Name">JPAContainer</text:span> is done simply in the constructor of the <text:span text:style-name="Class_20_Name">Table</text:span> just as with any Vaadin container:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buildMainArea() {</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="8"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">personTable</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Table(</text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P25"><text:s text:c="8"/>…</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1"><text:bookmark text:name="__RefHeading__49626_1659804707"/>Creating, Reading, Updating, and Deleting<text:bookmark-end text:name="__RefHeading__49626_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body">This chapter focuses on how the <text:span text:style-name="Class_20_Name">AddressBookMainView</text:span> implements CRUD – creation, reading, updating, and deletion of data objects in the domain model. The basics of these tasks were covered in the Vaadin Tutorial (notice that the code is not exactly the same), so we concentrate on the parts relevant to using JPAContainer.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Building the CRUD Area</text:h>
   <text:p text:style-name="Introducing_20_list">The right side of the main view contains a CRUD area where you can add items in the <text:span text:style-name="Class_20_Name">Person</text:span> table by clicking the <text:span text:style-name="GUI_20_Button">Add</text:span> button, delete them with the <text:span text:style-name="GUI_20_Button">Delete</text:span> button, and edit the selected person with the <text:span text:style-name="GUI_20_Button"><text:span text:style-name="T25">Edit</text:span></text:span> button.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka14" text:anchor-type="as-char" svg:width="12.607cm" svg:height="10.1cm" draw:z-index="55"><draw:image xlink:href="../img/crudview-annotated-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration11" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">12</text:sequence>: The CRUD area</text:p>
   <text:p text:style-name="Introducing_20_list">The user interface controls for the CRUD as well as the <text:span text:style-name="Class_20_Name">JPAContainer</text:span> references are defined as member variables:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">AddressBookMainView</text:span><text:span text:style-name="T6"> </text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="7"/></text:span><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T6"> HorizontalSplitPanel</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="7"/></text:span><text:span text:style-name="T4">implements</text:span> ComponentContainer {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Tree </text:span><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Table </text:span><text:span text:style-name="T14">personTable</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> TextField </text:span><text:span text:style-name="T14">searchField</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Button </text:span><text:span text:style-name="T14">newButton</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Button </text:span><text:span text:style-name="T14">deleteButton</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Button </text:span><text:span text:style-name="T14">editButton</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> JPAContainer&lt;Department&gt; </text:span><text:span text:style-name="T14">departments</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> JPAContainer&lt;Person&gt; </text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">departments</text:span></text:span><text:span text:style-name="T6"> and </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">persons</text:span></text:span><text:span text:style-name="T6"> members are merely shorthand references to the containers managed by the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">ContainerFactory</text:span></text:span><text:span text:style-name="T6">, as explained next.</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2"><text:bookmark text:name="__RefHeading__31946_1659804707"/>Creating an Item<text:bookmark-end text:name="__RefHeading__31946_1659804707"/></text:h>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">New </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Person</text:span></text:span><text:span text:style-name="T6"> items are created by clicking the </text:span><text:span text:style-name="GUI_20_Button"><text:span text:style-name="T6">Add</text:span></text:span><text:span text:style-name="T6"> button. The button is created in the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">buildMainArea()</text:span></text:span><text:span text:style-name="T6"> method as follows:</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T14">newButton</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Button(</text:span><text:span text:style-name="T18">&quot;Add&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">newButton</text:span><text:span text:style-name="T6">.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">Button.ClickListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">When the button is clicked, a new </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Person</text:span></text:span><text:span text:style-name="T6"> object is created and wrapped in a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">BeanItem</text:span></text:span><text:span text:style-name="T6"> to allow binding it to a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Form</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buttonClick(ClickEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="6"/></text:span><text:span text:style-name="T4">final</text:span><text:span text:style-name="T6"> BeanItem&lt;Person&gt; newPersonItem =</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="14"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> BeanItem&lt;Person&gt;(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Person());</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">Editing is done in a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">PersonEditor</text:span></text:span><text:span text:style-name="T6"> window documented in Section </text:span><text:span text:style-name="T6"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__26736_1659804707">6.3</text:bookmark-ref></text:span><text:span text:style-name="T6">: </text:span><text:span text:style-name="T9"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__26736_1659804707">Editing an Item in a PersonEditor</text:bookmark-ref></text:span><text:span text:style-name="T6">. The editor class defines an </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">EditorSavedListener</text:span></text:span><text:span text:style-name="T6"> interface for handling </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">EditorSavedEvent</text:span></text:span><text:span text:style-name="T6">s fired when the user clicks “</text:span><text:span text:style-name="GUI_20_Button"><text:span text:style-name="T6">Save</text:span></text:span><text:span text:style-name="T6">” in the editor.</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="6"/>PersonEditor personEditor =</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="14"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> PersonEditor(newPersonItem);</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="6"/>personEditor.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">EditorSavedListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The PersonEditor is described in more detail in Section </text:span><text:span text:style-name="T6"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__26736_1659804707">6.3</text:bookmark-ref></text:span><text:span text:style-name="T6">: </text:span><text:span text:style-name="T9"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__26736_1659804707">Editing an Item in a PersonEditor</text:bookmark-ref></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:h text:style-name="P31" text:outline-level="4">Adding an Entity to the JPAContainer</text:h>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">When saved, the edited new item is taken out of the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">BeanItem</text:span></text:span><text:span text:style-name="T6"> wrapper and added to the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer&lt;Person&gt;</text:span></text:span><text:span text:style-name="T6"> with the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">addEntity()</text:span></text:span><text:span text:style-name="T6"> method.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="10"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="10"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> editorSaved(EditorSavedEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="14"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.addEntity(newPersonItem.getBean());</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="10"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="6"/>});</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="6"/>…</text:p>
   <text:p text:style-name="Text_20_body"><text:soft-page-break/>Once written in the container, the <text:span text:style-name="Class_20_Name">Table</text:span> bound to the container is automatically updated to display the new item (notice that it is added to the end).</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark text:name="__RefHeading__26736_1659804707"/>Editing an Item in a PersonEditor<text:bookmark-end text:name="__RefHeading__26736_1659804707"/></text:h>
   <text:p text:style-name="Introducing_20_list">The <text:span text:style-name="GUI_20_Button">Edit</text:span> button is disabled by default and enabled when an item is selected in the table. When clicked, the <text:span text:style-name="Class_20_Name">PersonEditor</text:span> is opened for editing the currently selected item:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T14">editButton</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Button(</text:span><text:span text:style-name="T18">&quot;Edit&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">editButton</text:span><text:span text:style-name="T6">.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">Button.ClickListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buttonClick(ClickEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>getApplication().getMainWindow()</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="10"/>.addWindow(<text:span text:style-name="T4">new </text:span><text:span text:style-name="T6">PersonEditor(</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="13"/></text:span><text:span text:style-name="T14">personTable</text:span><text:span text:style-name="T6">.getItem(</text:span><text:span text:style-name="T14">personTable</text:span>.getValue())));</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="P27">});</text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Method_20_Name">getValue()</text:span> returns the item identifier of the currently selected item (not the item itself) and <text:span text:style-name="Method_20_Name">getItem()</text:span> returns the actual item using the ID. Notice that the JPA entity ID of the <text:span text:style-name="Class_20_Name">Person</text:span> entity is used also as the item identifier.</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4"><text:soft-page-break/>PersonEditor</text:h>
   <text:p text:style-name="Introducing_20_list">The <text:span text:style-name="Class_20_Name">PersonEditor</text:span> is a sub-window that contains a <text:span text:style-name="Class_20_Name">Form</text:span> for editing a <text:span text:style-name="Class_20_Name">Person</text:span> item.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka15" text:anchor-type="as-char" svg:width="8.862cm" svg:height="10.767cm" draw:z-index="56"><draw:image xlink:href="../img/personeditor.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8">Figure <text:sequence text:ref-name="refIllustration12" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">13</text:sequence>: The PersonEditor</text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">PersonEditor</text:span> is a sub-window that extends the <text:span text:style-name="Class_20_Name">Window</text:span>. It also handles button clicks and creates the field components for the form.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> PersonEditor </text:span><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T6"> Window</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T8"><text:s text:c="8"/></text:span><text:span text:style-name="T4">implements</text:span><text:span text:style-name="T6"> Button.ClickListener, </text:span>FormFieldFactory {</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">final</text:span><text:span text:style-name="T6"> Item </text:span><text:span text:style-name="T14">personItem</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Form </text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Button </text:span><text:span text:style-name="T14">saveButton</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Button </text:span><text:span text:style-name="T14">cancelButton</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list">The item to edit is given to the constructor as a parameter. When editing an existing item with the <text:span text:style-name="GUI_20_Button">Edit</text:span> button, the item is an <text:span text:style-name="Class_20_Name">EntityItem&lt;Person&gt;</text:span>. When editing a new item added with the <text:span text:style-name="GUI_20_Button">Add</text:span> button, the item is a temporary <text:span text:style-name="Class_20_Name">BeanItem&lt;Person&gt;</text:span> wrapper, as the person is not yet added to the <text:span text:style-name="Class_20_Name">JPAContainer</text:span>.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> PersonEditor(Item personItem) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">this</text:span><text:span text:style-name="T6">.</text:span><text:span text:style-name="T14">personItem</text:span><text:span text:style-name="T6"> = personItem;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:soft-page-break/><text:span text:style-name="T6">We use a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">BeanValidationForm</text:span></text:span><text:span text:style-name="T6"> from the Vaadin BeanValidation add-on to edit the item. We enable buffering by calling </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">setWriteThrough(false)</text:span></text:span><text:span text:style-name="T6">, because otherwise the edited values would be written directly to the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6">. With buffering, they are written only after </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">commit()</text:span></text:span><text:span text:style-name="T6"> is called.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6"> =</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> BeanValidationForm&lt;Person&gt;(Person.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.setFormFieldFactory(</text:span><text:span text:style-name="T4">this</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.setWriteThrough(</text:span><text:span text:style-name="T4">false</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.setImmediate(</text:span><text:span text:style-name="T4">true</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P24">And finally, we bind the person item to the form:</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.setItemDataSource(personItem,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/>Arrays.</text:span><text:span text:style-name="T9">asList</text:span><text:span text:style-name="T6">(</text:span><text:span text:style-name="T18">&quot;firstName&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T18">&quot;lastName&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/></text:span><text:span text:style-name="T18">&quot;phoneNumber&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T18">&quot;street&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T18">&quot;city&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T18">&quot;zipCode&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/></text:span><text:span text:style-name="T18">&quot;department&quot;</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="P25"><text:s text:c="8"/>…</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Saving the Form</text:h>
   <text:p text:style-name="Text_20_body">When the <text:span text:style-name="GUI_20_Button">Save</text:span> button is clicked, the buffered form is written to the underlying data model by calling <text:span text:style-name="Method_20_Name">commit()</text:span>. In case of editing an existing item, the data is written directly to the <text:span text:style-name="Class_20_Name">JPAContainer&lt;Person&gt;</text:span> and to the database. If editing a new item added with the <text:span text:style-name="GUI_20_Button">Add</text:span> button, the data is written to the <text:span text:style-name="Class_20_Name">BeanItem&lt;Person&gt;</text:span>.</text:p>
   <text:p text:style-name="Source_20_File_20_Start">@Override</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buttonClick(ClickEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (event.getButton() == </text:span><text:span text:style-name="T14">saveButton</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.commit();</text:span></text:p>
   <text:p text:style-name="Text_20_body">Then an <text:span text:style-name="Class_20_Name">EditorSavedEvent</text:span> is fired, to be received in an <text:span text:style-name="Class_20_Name">EditorSavedListener</text:span>, as described in Section <text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__31946_1659804707">6.2</text:bookmark-ref>: <text:span text:style-name="T2"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__31946_1659804707">Creating an Item</text:bookmark-ref></text:span>. This allows the <text:span text:style-name="Class_20_Name">Add</text:span> button mechanism to move the new <text:span text:style-name="Class_20_Name">Person</text:span> object from the <text:span text:style-name="Class_20_Name">BeanItem&lt;Person&gt;</text:span> to the <text:span text:style-name="Class_20_Name">JPAContainer&lt;Person&gt;</text:span>.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>fireEvent(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> EditorSavedEvent(</text:span><text:span text:style-name="T4">this</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T14">personItem</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/>} </text:span><text:span text:style-name="T4">else</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (event.getButton() == </text:span><text:span text:style-name="T14">cancelButton</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="P22">Otherwise, just discard the form. Then, close the sub-window.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.discard();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>close();</text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:h text:style-name="P33" text:outline-level="2">Deleting an Item</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">Deleting an item is done simply with the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">removeItem()</text:span></text:span><text:span text:style-name="T6"> method.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T14">deleteButton</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Button(</text:span><text:span text:style-name="T18">&quot;Delete&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">deleteButton</text:span><text:span text:style-name="T6">.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">Button.ClickListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buttonClick(ClickEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.removeItem(</text:span><text:span text:style-name="T14">personTable</text:span><text:span text:style-name="T6">.getValue());</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle">});</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:span text:style-name="T16">deleteButton</text:span><text:span text:style-name="T7">.setEnabled(</text:span><text:span text:style-name="T5">false</text:span><text:span text:style-name="T7">);</text:span></text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Method_20_Name">getValue()</text:span> returns the item identifier of the currently selected item (not the item itself) and <text:span text:style-name="Method_20_Name">removeItem()</text:span> removes the item with the ID. Notice that the JPA entity ID of the <text:span text:style-name="Class_20_Name">Person</text:span> entity is used also as the item identifier.</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1"><text:bookmark text:name="__RefHeading__48010_1659804707"/>Presenting Hierarchical Data<text:bookmark-end text:name="__RefHeading__48010_1659804707"/></text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">This chapter describes how to bind </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6"> to a hierarchical component, such as a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Tree</text:span></text:span><text:span text:style-name="T6"> or </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">TreeTable</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2">JPAContainer is Hierarchical</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6"> implements the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">HierarchicalEntityContainer</text:span></text:span><text:span text:style-name="T6"> interface, which extends the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Container.Hierarchical</text:span></text:span><text:span text:style-name="T6"> interface that defines hierarchical representation of data in a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Container</text:span></text:span><text:span text:style-name="T6">. You can bind any such container to a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Tree</text:span></text:span><text:span text:style-name="T6"> or a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">TreeTable</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="P20"><draw:frame draw:style-name="fr5" draw:name="grafiikka17" text:anchor-type="as-char" svg:width="5.052cm" svg:height="6.481cm" draw:z-index="57"><draw:image xlink:href="../img/departmenttree.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8"><text:span text:style-name="T6">Figure </text:span><text:span text:style-name="T6"><text:sequence text:ref-name="refIllustration13" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">14</text:sequence></text:span><text:span text:style-name="T6">: Tree Bound to a Hierarchical JPAContainer&lt;Department&gt;</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">HierarchicalEntityContainer</text:span></text:span><text:span text:style-name="T6"> requires that the hierarchy is represented by parent references in the entities. Recall from the Chapter </text:span><text:span text:style-name="T6"><text:bookmark-ref text:reference-format="chapter" text:ref-name="__RefHeading__32776_1659804707">4</text:bookmark-ref></text:span><text:span text:style-name="T6">: </text:span><text:span text:style-name="T9"><text:bookmark-ref text:reference-format="text" text:ref-name="__RefHeading__32776_1659804707">Defining a Domain Model</text:bookmark-ref></text:span><text:span text:style-name="T6"> that the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Department</text:span></text:span><text:span text:style-name="T6"> entity contains an </text:span><text:span text:style-name="T9">«is part of»</text:span><text:span text:style-name="T6"> relationship with itself, represented with a </text:span><text:span text:style-name="T9">parent</text:span><text:span text:style-name="T6"> property. The relationship is shown in Figure </text:span><text:span text:style-name="T6"><text:sequence-ref text:reference-format="value" text:ref-name="refIllustration14">15</text:sequence-ref></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="P20"><draw:frame draw:style-name="fr5" draw:name="grafiikka16" text:anchor-type="as-char" svg:width="5.308cm" svg:height="4.844cm" draw:z-index="58"><draw:image xlink:href="../img/domain-model-department-hi.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8"><text:span text:style-name="T6">Figure </text:span><text:span text:style-name="T6"><text:sequence text:ref-name="refIllustration14" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">15</text:sequence></text:span><text:span text:style-name="T6">: Hierarchy Representation in the Domain Model</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2"><text:soft-page-break/>Defining Hierarchy Relationship</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The hierarchy relationships for the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer&lt;Department&gt;</text:span></text:span><text:span text:style-name="T6"> are defined by extending it as </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">HierarchicalDepartmentContainer</text:span></text:span><text:span text:style-name="T6"> that makes the necessary settings.</text:span></text:p>
   <text:h text:style-name="P37" text:outline-level="3">Setting the Parent Reference Property</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The property representing the hierarchy by parenthood is defined with the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">setParentProperty()</text:span></text:span><text:span text:style-name="T6"> method. In our domain model, the property name is coincidentally “</text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">parent</text:span></text:span><text:span text:style-name="T6">”.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">HierarchicalDepartmentContainer</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T11"><text:s text:c="7"/></text:span><text:span text:style-name="T4">extends</text:span><text:span text:style-name="T6"> JPAContainer&lt;Department&gt; {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> HierarchicalDepartmentContainer() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">super</text:span><text:span text:style-name="T6">(Department.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="P10"><text:s text:c="8"/>…</text:p>
   <text:p text:style-name="P10"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>setParentProperty(</text:span><text:span text:style-name="T18">&quot;parent&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>…</text:p>
   <text:h text:style-name="P37" text:outline-level="3">Redefining the areChildrenAllowed() Behaviour</text:h>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">The class overrides the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">areChildrenAllowed()</text:span></text:span><text:span text:style-name="T6"> method to customize the logic for when children are allowed, that is, when the expansion marker is shown. We want to have only the non-leaf items expandable in the tree. Children are therefore allowed only for the root items, that is, the “super departments” having the </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">superDepartment</text:span></text:span><text:span text:style-name="T6"> property as </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">true</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="P16">@Override</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">boolean</text:span><text:span text:style-name="T6"> areChildrenAllowed(Object itemId) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">return</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">super</text:span><text:span text:style-name="T6">.areChildrenAllowed(itemId) &amp;&amp;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="11"/>getItem(itemId).getEntity()</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="15"/>.isSuperDepartment();</text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">The </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">areChildrenAllowed()</text:span></text:span><text:span text:style-name="T6"> in the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6"> superclass should be called to make basic checks.</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2">Creating Hierarchical Entities</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Department</text:span></text:span><text:span text:style-name="T6"> entities are created in the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">DemoDataGenerator</text:span></text:span><text:span text:style-name="T6"> by writing directly to the JPA </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">EntityManager</text:span></text:span><text:span text:style-name="T6">, so that we do not use JPAContainer for this at all. We simply use the </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">setParent()</text:span></text:span><text:span text:style-name="T6"> for the children to set the hierarchy relationship.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:tab/>em.getTransaction().begin();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:tab/>Random r = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Random(0);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:tab/></text:span><text:span text:style-name="T4">for</text:span><text:span text:style-name="T6"> (String o : </text:span><text:span text:style-name="T15">officeNames</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/>Department geoGroup = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Department();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>geoGroup.setName(o);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:soft-page-break/><text:span text:style-name="T6"><text:s text:c="4"/><text:tab/></text:span><text:span text:style-name="T4">for</text:span><text:span text:style-name="T6"> (String g : </text:span><text:span text:style-name="T15">groupsNames</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>Department group = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Department();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>group.setName(g);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>… add persons to the group …</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:tab/><text:tab/><text:tab/><text:tab/></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>group.setParent(geoGroup);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>group.setPersons(gPersons);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>em.persist(group);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>em.persist(geoGroup);</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:tab/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"/>
   <text:p text:style-name="Source_20_File_20_End"><text:tab/>em.getTransaction().commit();</text:p>
   <text:p text:style-name="P22"/>
   <text:h text:style-name="Heading_20_1" text:outline-level="1">Filtering Data</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">This step describes how to create filters for a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2">Overview</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The JPAContainer AddressBook demo provides two different ways to filter the persons in the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer&lt;Person&gt;</text:span></text:span><text:span text:style-name="T6"> container, attached to the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Table</text:span></text:span><text:span text:style-name="T6">. First, the user can select a department from the tree on the left, in which case the persons are filtered by the department (or the super-department) they belong to. Second, the use can do text search to filter persons by their name property.</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">Filtering a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">JPAContainer</text:span></text:span><text:span text:style-name="T6"> does not differ significantly from regular container filtering described in the section </text:span><text:a xlink:type="simple" xlink:href="https://vaadin.com/book/-/page/datamodel.container.html#datamodel.container.filtered">Filterable Containers</text:a><text:span text:style-name="T6"> in the Book of Vaadin.</text:span></text:p>
   <text:h text:style-name="P33" text:outline-level="2">Filtering by Entity</text:h>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">Filtering persons by a department is done with a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Department</text:span></text:span><text:span text:style-name="T6"> object stored as a member variable in the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">AddressBookMainView</text:span></text:span><text:span text:style-name="T6">:</text:span></text:p>
   <text:p text:style-name="Source_20_File"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:h text:style-name="P37" text:outline-level="3">Setting the Filter</text:h>
   <text:p text:style-name="P24">Selecting an item in the department tree fires a value change event, which we handle to set the department filter.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Tree(</text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T14">departments</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6">.setItemCaptionPropertyId(</text:span><text:span text:style-name="T18">&quot;name&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6">.setImmediate(</text:span><text:span text:style-name="T4">true</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6">.setSelectable(</text:span><text:span text:style-name="T4">true</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">groupTree</text:span><text:span text:style-name="T6">.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">Property.ValueChangeListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> valueChange(ValueChangeEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>Object id = event.getProperty().getValue();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (id != </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">Now, we can get the selected item from the container with </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">getItem()</text:span></text:span><text:span text:style-name="T6">, which returns an </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">EntityItem&lt;Department&gt;</text:span></text:span><text:span text:style-name="T6"> wrapper. We can get a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Department</text:span></text:span><text:span text:style-name="T6"> object reference with </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">getEntity()</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="12"/>Department entity =</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="20"/></text:span><text:span text:style-name="T14">departments</text:span><text:span text:style-name="T6">.getItem(id).getEntity();</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">Then, we just set the filter and apply the filters in </text:span><text:span text:style-name="Method_20_Name"><text:span text:style-name="T6">updateFilters()</text:span></text:span><text:span text:style-name="T6">.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/></text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6"> = entity;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>} </text:span><text:span text:style-name="T4">else</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6"> != </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="12"/></text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>updateFilters();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:soft-page-break/>});</text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Adding and Applying the Filter</text:h>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Method_20_Name">updateFilters()</text:span> applies the department filter (as well as the other filter). We first clear up any existing filters and disable the <text:span text:style-name="Class_20_Name">JPAContainer&lt;Person&gt;</text:span> automatic applying of filters immediately when they are added. As applying a filter takes a bit time and we have two filters, we want to apply them both at once.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="Code_20_Keyword"><text:span text:style-name="T4">private</text:span></text:span><text:span text:style-name="T8"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T8"> updateFilters() {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.setApplyFiltersImmediately(</text:span><text:span text:style-name="T4">false</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.removeAllContainerFilters();</text:span></text:p>
   <text:p text:style-name="P24">As we have a two-level department hierarchy, we need to handle the cases for a department and super-department separately.</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/>if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6"> != </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T26">// two level hierarchy at max in our demo</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6">.getParent() == </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.addContainerFilter(</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T8"><text:s text:c="16"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Equal(</text:span><text:span text:style-name="T18">&quot;department.parent&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="26"/></text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="4"/>} </text:span><text:span text:style-name="T4">else</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.addContainerFilter(</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T8"><text:s text:c="16"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Equal(</text:span><text:span text:style-name="T18">&quot;department&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:span text:style-name="T6"><text:s text:c="26"/></text:span><text:span text:style-name="T14">departmentFilter</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="Source_20_File_20_End"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">Equal</text:span> constructor creates a filter that compares a container property in the <text:span text:style-name="Class_20_Name">JPAContainer&lt;Person&gt;</text:span> to a value. The value of the <text:span text:style-name="Package_20_Name">department</text:span> property of a <text:span text:style-name="Class_20_Name">Person</text:span> bean is a <text:span text:style-name="Class_20_Name">Department</text:span> object, so we can compare it to the stored filter object.</text:p>
   <text:p text:style-name="Text_20_body">The <text:span text:style-name="Class_20_Name">Equal</text:span> filter allows referencing nested bean properties with dot notation, so we were able to refer to the <text:span text:style-name="Parameter">parent</text:span> property in the <text:span text:style-name="Class_20_Name">Department</text:span> bean.</text:p>
   <text:p text:style-name="Text_20_body">It is important to notice that even though the <text:span text:style-name="Class_20_Name">JPAContainer&lt;Department&gt;</text:span> and <text:span text:style-name="Class_20_Name">JPAContainer&lt;Person&gt;</text:span> were created separately using the entity manager, the <text:span text:style-name="Class_20_Name">Department</text:span> entities referenced in the <text:span text:style-name="Class_20_Name">Person</text:span> container are the same objects as in the <text:span text:style-name="Class_20_Name">Department</text:span> container.</text:p>
   <text:h text:style-name="Heading_20_4" text:outline-level="4">Applying the Filters</text:h>
   <text:p text:style-name="Text_20_body">The filters are applied at the end of the <text:span text:style-name="Method_20_Name">updateFilters()</text:span> method as follows:</text:p>
   <text:p text:style-name="Source_20_File"><text:span text:style-name="T16">persons</text:span><text:span text:style-name="T7">.applyFilters();</text:span></text:p>
   <text:p text:style-name="Text_20_body">Notice that this applies also the text filter described next.</text:p>
   <text:h text:style-name="P33" text:outline-level="2"><text:soft-page-break/>Filtering by a String Property Value</text:h>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">Filtering persons by a text filter is done with string stored as a member variable in the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">AddressBookMainView</text:span></text:span><text:span text:style-name="T6">:</text:span></text:p>
   <text:p text:style-name="Source_20_File"><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">The search field is a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">TextField</text:span></text:span><text:span text:style-name="T6"> and the input is handled interactively with a text change listener. It simply stores the current input value in the filter string as follows:</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T14">searchField</text:span><text:span text:style-name="T6"> = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> TextField();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">searchField</text:span><text:span text:style-name="T6">.setInputPrompt(</text:span><text:span text:style-name="T18">&quot;Search by name&quot;</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T14">searchField</text:span><text:span text:style-name="T6">.addListener(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T11">TextChangeListener()</text:span><text:span text:style-name="T6"> {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Override</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> textChange(TextChangeEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6"> = event.getText();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="8"/>updateFilters();</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_End">});</text:p>
   <text:p text:style-name="Introducing_20_list"><text:span text:style-name="T6">We use the filter string in a composite filter that checks whether the filter string matches the beginning of either </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">firstName</text:span></text:span><text:span text:style-name="T6"> or </text:span><text:span text:style-name="Parameter"><text:span text:style-name="T6">lastName</text:span></text:span><text:span text:style-name="T6"> of a </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">Person</text:span></text:span><text:span text:style-name="T6"> entity.</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (</text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6"> != </text:span><text:span text:style-name="T4">null</text:span><text:span text:style-name="T6"> &amp;&amp; !</text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6">.equals(</text:span><text:span text:style-name="T18">&quot;&quot;</text:span><text:span text:style-name="T6">)) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/>Or or = </text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Or(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Like(</text:span><text:span text:style-name="T18">&quot;firstName&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="28"/></text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6"> + </text:span><text:span text:style-name="T18">&quot;%&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T4">false</text:span><text:span text:style-name="T6">),</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="19"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> Like(</text:span><text:span text:style-name="T18">&quot;lastName&quot;</text:span><text:span text:style-name="T6">,</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="28"/></text:span><text:span text:style-name="T14">textFilter</text:span><text:span text:style-name="T6"> + </text:span><text:span text:style-name="T18">&quot;%&quot;</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T4">false</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T14">persons</text:span><text:span text:style-name="T6">.addContainerFilter(or);</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:p text:style-name="P22">The filter is applied along with the department filter as described earlier.</text:p>
   <text:h text:style-name="Heading_20_1" text:outline-level="1">Vaadin Bean Validation</text:h>
   <text:p text:style-name="Text_20_body">This chapter describes the bean validation in the JPAContainer AddressBook Demo.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Overview</text:h>
   <text:p text:style-name="Text_20_body">The AddressBook Demo uses the <text:a xlink:type="simple" xlink:href="https://vaadin.com/directory#addon/vaadin-bean-validation"><text:span text:style-name="T2">Vaadin Bean Validation add-on</text:span></text:a> for validating the beans after editing, before they are committed to the database.</text:p>
   <text:p text:style-name="Text_20_body">The Vaadin Bean Validation add-on consists of a Vaadin validator and a form that automatically applies that validator. It uses the Java Bean Validation API 1.0 (JSR-303) for validating beans based on annotations on their fields.</text:p>
   <text:p text:style-name="Text_20_body">To use the add-on, the project needs an implementation of the Bean Validation API. In our example project, we use the <text:span text:style-name="T2">Hibernate Validator</text:span>.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Annotations</text:h>
   <text:p text:style-name="Text_20_body">The validations constraints are defined in the entity classes as annotations. For example, in the <text:span text:style-name="Class_20_Name">Person</text:span> class, we use the <text:span text:style-name="Parameter">@NotNull</text:span> and <text:span text:style-name="Parameter">@Size</text:span> constraints for some of the bean properties.</text:p>
   <text:p text:style-name="Source_20_File_20_Start">@Entity</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6"> Person {</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@NotNull</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Size</text:span><text:span text:style-name="T6">(min = 2, max = 24)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">firstName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@Size</text:span><text:span text:style-name="T6">(min = 2, max = 24)</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> String </text:span><text:span text:style-name="T14">lastName</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P10"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@NotNull</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T13">@ManyToOne</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">private</text:span><text:span text:style-name="T6"> Department </text:span><text:span text:style-name="T14">department</text:span><text:span text:style-name="T6">;</text:span></text:p>
   <text:p text:style-name="P25"><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Text_20_body">For a complete list of allowed constraints for different data types, please see the <text:a xlink:type="simple" xlink:href="http://docs.oracle.com/javaee/6/tutorial/doc/gircz.html">Bean Validation API documentation</text:a>.</text:p>
   <text:h text:style-name="Heading_20_2" text:outline-level="2">Using the Validator</text:h>
   <text:p text:style-name="Text_20_body">The Bean Validation is used by using the <text:span text:style-name="Class_20_Name">BeanValidationForm&lt;&gt;</text:span> instead of the regular form. The constructor of the generic type requires the bean type as a parameter.</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> PersonEditor(Item personItem) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">this</text:span><text:span text:style-name="T6">.</text:span><text:span text:style-name="T14">personItem</text:span><text:span text:style-name="T6"> = personItem;</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6"> =</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> BeanValidationForm&lt;Person&gt;(Person.</text:span><text:span text:style-name="T4">class</text:span><text:span text:style-name="T6">);</text:span></text:p>
   <text:p text:style-name="P25"><text:soft-page-break/><text:s text:c="4"/>…</text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">After that, using bean validation is totally transparent as the </text:span><text:span text:style-name="Class_20_Name"><text:span text:style-name="T6">BeanValidationForm</text:span></text:span><text:span text:style-name="T6"> attaches special bean validators to field as they are attached to the form.</text:span></text:p>
   <text:h text:style-name="Heading_20_3" text:outline-level="3">Doing Validation</text:h>
   <text:p text:style-name="Introducing_20_list">The validators are checked along with possible other validators when <text:span text:style-name="Method_20_Name">commit()</text:span> or <text:span text:style-name="Method_20_Name">validate()</text:span> is called for the form. In the <text:span text:style-name="Class_20_Name">PersonEditor</text:span> we run <text:span text:style-name="Method_20_Name">commit()</text:span> simply as follows:</text:p>
   <text:p text:style-name="Source_20_File_20_Start"><text:span text:style-name="T4">public</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">void</text:span><text:span text:style-name="T6"> buttonClick(ClickEvent event) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/></text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (event.getButton() == </text:span><text:span text:style-name="T14">saveButton</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.commit();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/>fireEvent(</text:span><text:span text:style-name="T4">new</text:span><text:span text:style-name="T6"> EditorSavedEvent(</text:span><text:span text:style-name="T4">this</text:span><text:span text:style-name="T6">, </text:span><text:span text:style-name="T14">personItem</text:span><text:span text:style-name="T6">));</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="4"/>} </text:span><text:span text:style-name="T4">else</text:span><text:span text:style-name="T6"> </text:span><text:span text:style-name="T4">if</text:span><text:span text:style-name="T6"> (event.getButton() == </text:span><text:span text:style-name="T14">cancelButton</text:span><text:span text:style-name="T6">) {</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:span text:style-name="T6"><text:s text:c="8"/></text:span><text:span text:style-name="T14">editorForm</text:span><text:span text:style-name="T6">.discard();</text:span></text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>}</text:p>
   <text:p text:style-name="Source_20_File_20_Middle"><text:s text:c="4"/>close();</text:p>
   <text:p text:style-name="Source_20_File_20_End">}</text:p>
   <text:p text:style-name="Text_20_body">Bean validation is shown in action in Figure <text:sequence-ref text:reference-format="value" text:ref-name="refIllustration15">16</text:sequence-ref>. Failing validation results in an error message.</text:p>
   <text:p text:style-name="Illustration"><draw:frame draw:style-name="fr5" draw:name="grafiikka19" text:anchor-type="as-char" svg:width="8.253cm" svg:height="11.005cm" draw:z-index="59"><draw:image xlink:href="../img/bean-validation.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
    </draw:frame></text:p>
   <text:p text:style-name="P8"><text:span text:style-name="T6">Figure </text:span><text:span text:style-name="T6"><text:sequence text:ref-name="refIllustration15" text:name="Illustration" text:formula="ooow:Illustration+1" style:num-format="1">16</text:sequence></text:span><text:span text:style-name="T6">: Bean Validation</text:span></text:p>
   <text:h text:style-name="P37" text:outline-level="3"><text:soft-page-break/>Locale Setting for Bean Validation</text:h>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6">The messages are defined in the bean validation implementation, in a </text:span><text:span text:style-name="Filename"><text:span text:style-name="T6">ValidationMessages.properties</text:span></text:span><text:span text:style-name="T6"> file. The message is shown in the language specified with the locale setting for the form. The default language is English, but Hibernate Validator contains translations of the messages for a number of languages. If other languages are needed, you need to provide a translation of the properties file.</text:span></text:p>
   <text:p text:style-name="Text_20_body"><text:span text:style-name="T6"><text:s text:c="2"/></text:span><text:reference-mark text:name="loppumerkki"/><text:span text:style-name="T6"><office:annotation>
      <dc:creator>Tuntematon tekijä</dc:creator>
      <dc:date>2011-11-18T18:17:48</dc:date>
      <text:p text:style-name="P38"><text:span text:style-name="T37">Document and marker for counting pages correctly.</text:span></text:p>
     </office:annotation></text:span><text:span text:style-name="T6"> </text:span></text:p>
   <text:p text:style-name="Header"><text:bookmark-start text:name="_PictureBullets"/><text:span text:style-name="T1"><draw:frame draw:style-name="fr7" draw:name="graphics4" text:anchor-type="as-char" svg:width="0.085cm" svg:height="0.071cm" draw:z-index="0"><draw:image xlink:href="Pictures/1000000000000030000000286BC7771E.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
     </draw:frame></text:span><text:span text:style-name="T1"><draw:frame draw:style-name="fr7" draw:name="graphics5" text:anchor-type="as-char" svg:width="0.988cm" svg:height="0.811cm" draw:z-index="0"><draw:image xlink:href="Pictures/100000000000001C00000017FE54AD58.jpg" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
     </draw:frame></text:span><text:span text:style-name="T1"><draw:frame draw:style-name="fr7" draw:name="graphics6" text:anchor-type="as-char" svg:width="1.976cm" svg:height="1.976cm" draw:z-index="0"><draw:image xlink:href="Pictures/100000000000003800000038F7CFF498.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
     </draw:frame></text:span><text:span text:style-name="T1"><draw:frame draw:style-name="fr7" draw:name="graphics7" text:anchor-type="as-char" svg:width="1.976cm" svg:height="1.976cm" draw:z-index="0"><draw:image xlink:href="Pictures/10000000000000380000003884756AED.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
     </draw:frame></text:span><text:span text:style-name="T1"><draw:frame draw:style-name="fr7" draw:name="graphics8" text:anchor-type="as-char" svg:width="2.469cm" svg:height="1.976cm" draw:z-index="0"><draw:image xlink:href="Pictures/100000000000004600000038C04CE4BC.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
     </draw:frame></text:span><text:bookmark-end text:name="_PictureBullets"/></text:p>
  </office:text>
 </office:body>
</office:document-content>